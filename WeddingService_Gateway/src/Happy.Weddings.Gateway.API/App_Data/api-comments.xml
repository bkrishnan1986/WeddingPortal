<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Happy.Weddings.Gateway.API</name>
    </assembly>
    <members>
        <member name="T:Happy.Weddings.Gateway.API.AuthorizationRequirements.UserIdExistsRequirementHandler">
            <summary>
            Filter that checks if the User specified by the UserName exists in Assist
            </summary>
        </member>
        <member name="F:Happy.Weddings.Gateway.API.AuthorizationRequirements.UserIdExistsRequirementHandler.httpClientFactory">
            <summary>
            The HTTP client factory
            </summary>
        </member>
        <member name="F:Happy.Weddings.Gateway.API.AuthorizationRequirements.UserIdExistsRequirementHandler.servicesConfig">
            <summary>
            The services configuration
            </summary>
        </member>
        <member name="F:Happy.Weddings.Gateway.API.AuthorizationRequirements.UserIdExistsRequirementHandler.logger">
            <summary>
            The logger
            </summary>
        </member>
        <member name="F:Happy.Weddings.Gateway.API.AuthorizationRequirements.UserIdExistsRequirementHandler.authorizationConfig">
            <summary>
            The authorization configuration
            </summary>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.AuthorizationRequirements.UserIdExistsRequirementHandler.#ctor(System.Net.Http.IHttpClientFactory,Happy.Weddings.Gateway.Core.Infrastructure.ServicesConfig,Microsoft.Extensions.Logging.ILogger{Happy.Weddings.Gateway.API.AuthorizationRequirements.UserIdExistsRequirementHandler},Happy.Weddings.Gateway.Core.Infrastructure.AuthorizationConfig)">
            <summary>
            Initializes the insatnce of the class
            </summary>
            <param name="httpClientFactory">The HTTP client factory.</param>
            <param name="servicesConfig">The services configuration.</param>
            <param name="logger">Represents the logger</param>
            <param name="authorizationConfig">The authorization configuration.</param>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.AuthorizationRequirements.UserIdExistsRequirementHandler.HandleRequirementAsync(Microsoft.AspNetCore.Authorization.AuthorizationHandlerContext,Happy.Weddings.Gateway.API.AuthorizationRequirements.UserIdRequirement)">
            <summary>
            Check if  requirement has been handled
            </summary>
        </member>
        <member name="T:Happy.Weddings.Gateway.API.AuthorizationRequirements.UserIdRequirement">
            <summary>
            Represensts the requirement for user Id 
            </summary>
        </member>
        <member name="P:Happy.Weddings.Gateway.API.AuthorizationRequirements.UserIdRequirement.UserIdClaim">
            <summary>
            Gets or sets the UserIdClaim
            </summary>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.AuthorizationRequirements.UserIdRequirement.#ctor(System.String)">
            <summary>
            Initializes the isnstance of the class
            </summary>
            <param name="userIdClaim">Represents the claim</param>
        </member>
        <member name="T:Happy.Weddings.Gateway.API.Controllers.v1.AuditLog.AuditLogController">
            <summary>
            AuditLog operations handled by this controller
            </summary>
        </member>
        <member name="F:Happy.Weddings.Gateway.API.Controllers.v1.AuditLog.AuditLogController.auditLogService">
            <summary>
            The AuditLog service
            </summary>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.AuditLog.AuditLogController.#ctor(Happy.Weddings.Gateway.Core.Services.v1.AuditLog.IAuditLogService)">
            <summary>
            Initializes a new instance of the <see cref="T:Happy.Weddings.Gateway.API.Controllers.v1.AuditLog.AuditLogController"/> class.
            </summary>
            <param name="auditLogService">The AuditLog service.</param>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.AuditLog.AuditLogController.GetAllAuditLogs(Happy.Weddings.Gateway.Core.DTO.AuditLog.AuditLog.AuditLogParameters)">
            <summary>
            Gets the AuditLog.
            </summary>
            <param name="auditLogParameters">The AuditLog parameters request.</param>
            <returns></returns>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.AuditLog.AuditLogController.GetAuditLog(System.Int32)">
            <summary>
            Gets the AuditLog.
            </summary>
            <param name="auditLogId">The AuditLog identifier.</param>
            <returns></returns>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.AuditLog.AuditLogController.CreateAuditLog(Happy.Weddings.Gateway.Core.DTO.AuditLog.AuditLog.CreateAuditLogRequest)">
            <summary>
            Creates the AuditLog.
            </summary>
            <param name="request">The request.</param>
            <returns></returns>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.AuditLog.AuditLogController.UpdateAuditLog(System.Int32,Happy.Weddings.Gateway.Core.DTO.AuditLog.AuditLog.UpdateAuditLogRequest)">
            <summary>
            Updates the AuditLog.
            </summary>
            <param name="auditLogId">The AuditLog identifier.</param>
            <param name="request">The request.</param>
            <returns></returns>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.AuditLog.AuditLogController.DeleteAuditLog(System.Int32)">
            <summary>
            Deletes the AuditLog.
            </summary>
            <param name="auditLogId">The AuditLog identifier.</param>
            <returns></returns>
        </member>
        <member name="T:Happy.Weddings.Gateway.API.Controllers.v1.AuditLog.MulticodeController">
            <summary>
            Multicode operations handled by this controller
            </summary>
        </member>
        <member name="F:Happy.Weddings.Gateway.API.Controllers.v1.AuditLog.MulticodeController.multicodeService">
            <summary>
            The Multicode service
            </summary>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.AuditLog.MulticodeController.#ctor(Happy.Weddings.Gateway.Core.Services.v1.AuditLog.IMulticodeService)">
            <summary>
            Initializes a new instance of the <see cref="T:Happy.Weddings.Gateway.API.Controllers.v1.AuditLog.MulticodeController"/> class.
            </summary>
            <param name="multicodeService">The Multicode service.</param>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.AuditLog.MulticodeController.GetAllMultiCodes">
            <summary>
            Gets all multi codes.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.AuditLog.MulticodeController.GetMultiCode(System.String)">
            <summary>
            Gets the Multicode.
            </summary>
            <param name="code">System Code.</param>
            <returns></returns>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.AuditLog.MulticodeController.CreateMultiCode(Happy.Weddings.Gateway.Core.DTO.AuditLog.MultiCode.CreateMulticodeAuditLogRequest)">
            <summary>
            Creates the Multicode.
            </summary>
            <param name="request">The request.</param>
            <returns></returns>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.AuditLog.MulticodeController.UpdateMultiCode(System.String,Happy.Weddings.Gateway.Core.DTO.AuditLog.MultiCode.UpdateMulticodeAuditLogRequest)">
            <summary>
            Updates the Multicode.
            </summary>
            <param name="code">System Code.</param>
            <param name="request">The request.</param>
            <returns></returns>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.AuditLog.MulticodeController.DeleteMultiCode(System.String)">
            <summary>
            Deletes the Multicode.
            </summary>
            <param name="code">System Code.</param>
            <returns></returns>
        </member>
        <member name="T:Happy.Weddings.Gateway.API.Controllers.v1.AuditLog.MultidetailController">
            <summary>
            Multidetail operations handled by this controller
            </summary>
        </member>
        <member name="F:Happy.Weddings.Gateway.API.Controllers.v1.AuditLog.MultidetailController.multidetailService">
            <summary>
            The Multidetail service
            </summary>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.AuditLog.MultidetailController.#ctor(Happy.Weddings.Gateway.Core.Services.v1.AuditLog.IMultidetailService)">
            <summary>
            Initializes a new instance of the <see cref="T:Happy.Weddings.Gateway.API.Controllers.v1.AuditLog.MultidetailController"/> class.
            </summary>
            <param name="multidetailService">The Multidetail service.</param>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.AuditLog.MultidetailController.GetAllMultiDetails(Happy.Weddings.Gateway.Core.DTO.AuditLog.MultiDetail.MultidetailParameter)">
            <summary>
            Gets the Multidetail.
            </summary>
            <param name="multidetailParameter">The Multidetail parameters request.</param>
            <returns></returns>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.AuditLog.MultidetailController.GetMultiDetailsById(System.String)">
            <summary>
            Gets the Multidetail.
            </summary>
            <param name="multicodeId">The MultiCode identifier.</param>
            <returns></returns>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.AuditLog.MultidetailController.CreateMultiDetails(Happy.Weddings.Gateway.Core.DTO.AuditLog.MultiDetail.CreateMultidetailAuditLogRequest)">
            <summary>
            Creates the Multidetail.
            </summary>
            <param name="request">The request.</param>
            <returns></returns>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.AuditLog.MultidetailController.UpdateMultiDetails(System.Int32,Happy.Weddings.Gateway.Core.DTO.AuditLog.MultiDetail.UpdateMultidetailAuditLogRequest)">
            <summary>
            Updates the Multidetail.
            </summary>
            <param name="multidetailId">The Multidetail identifier.</param>
            <param name="request">The request.</param>
            <returns></returns>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.AuditLog.MultidetailController.DeleteMultiDetails(System.Int32)">
            <summary>
            Deletes the Multidetail.
            </summary>
            <param name="multidetailId">The Multidetail identifier.</param>
            <returns></returns>
        </member>
        <member name="T:Happy.Weddings.Gateway.API.Controllers.v1.Blog.CommentReplyController">
            <summary>
            Review operations handled by this controller
            </summary>
        </member>
        <member name="F:Happy.Weddings.Gateway.API.Controllers.v1.Blog.CommentReplyController.commentReplyService">
            <summary>
            The CommentReply service
            </summary>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.Blog.CommentReplyController.#ctor(Happy.Weddings.Gateway.Core.Services.v1.Blog.ICommentReplyService)">
            <summary>
            Initializes a new instance of the <see cref="T:Happy.Weddings.Gateway.API.Controllers.v1.Blog.CommentReplyController"/> class.
            </summary>
            <param name="commentReplyService">The CommentReply service.</param>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.Blog.CommentReplyController.GetReviews(Happy.Weddings.Gateway.Core.DTO.Blog.CommentReply.CommentReplyParametersRequest)">
            <summary>
            Gets the CommentReply.
            </summary>
            <param name="commentReplyParametersRequest">The CommentReply parameters request.</param>
            <returns></returns>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.Blog.CommentReplyController.GetReview(System.Int32)">
            <summary>
            Gets the CommentReply.
            </summary>
            <param name="commentreplyId">The CommentReply identifier.</param>
            <returns></returns>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.Blog.CommentReplyController.CreateReview(Happy.Weddings.Gateway.Core.DTO.Blog.CommentReply.CreateCommentReplyBlogRequest)">
            <summary>
            Creates the CommentReply.
            </summary>
            <param name="request">The request.</param>
            <returns></returns>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.Blog.CommentReplyController.UpdateReview(System.Int32,Happy.Weddings.Gateway.Core.DTO.Blog.CommentReply.UpdateCommentReplyBlogRequest)">
            <summary>
            Updates the CommentReply.
            </summary>
            <param name="commentreplyId">The CommentReply identifier.</param>
            <param name="request">The request.</param>
            <returns></returns>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.Blog.CommentReplyController.DeleteReview(System.Int32)">
            <summary>
            Deletes the CommentReply.
            </summary>
            <param name="commentreplyId">The CommentReply identifier.</param>
            <returns></returns>
        </member>
        <member name="T:Happy.Weddings.Gateway.API.Controllers.v1.Blog.MulticodeController">
            <summary>
            Lead operations handled by this controller
            </summary>
        </member>
        <member name="F:Happy.Weddings.Gateway.API.Controllers.v1.Blog.MulticodeController.multicodeService">
            <summary>
            The Multicode service
            </summary>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.Blog.MulticodeController.#ctor(Happy.Weddings.Gateway.Core.Services.v1.Blog.IMulticodeService)">
            <summary>
            Initializes a new instance of the <see cref="T:Happy.Weddings.Gateway.API.Controllers.v1.Blog.MulticodeController"/> class.
            </summary>
            <param name="multicodeService">The Multicode service.</param>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.Blog.MulticodeController.GetAllMultiCodes">
            <summary>
            Gets all multi codes.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.Blog.MulticodeController.GetMultiCode(System.String)">
            <summary>
            Gets the Multicode.
            </summary>
            <param name="code">System Code.</param>
            <returns></returns>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.Blog.MulticodeController.CreateMultiCode(Happy.Weddings.Gateway.Core.DTO.Blog.Multicode.CreateMulticodeBlogRequest)">
            <summary>
            Creates the Multicode.
            </summary>
            <param name="request">The request.</param>
            <returns></returns>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.Blog.MulticodeController.UpdateMultiCode(System.String,Happy.Weddings.Gateway.Core.DTO.Blog.Multicode.UpdateMulticodeBlogRequest)">
            <summary>
            Updates the Multicode.
            </summary>
            <param name="code">System Code.</param>
            <param name="request">The request.</param>
            <returns></returns>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.Blog.MulticodeController.DeleteMultiCode(System.String)">
            <summary>
            Deletes the Multicode.
            </summary>
            <param name="code">System Code.</param>
            <returns></returns>
        </member>
        <member name="T:Happy.Weddings.Gateway.API.Controllers.v1.Blog.MultidetailController">
            <summary>
            Lead operations handled by this controller
            </summary>
        </member>
        <member name="F:Happy.Weddings.Gateway.API.Controllers.v1.Blog.MultidetailController.multidetailService">
            <summary>
            The Multidetail service
            </summary>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.Blog.MultidetailController.#ctor(Happy.Weddings.Gateway.Core.Services.v1.Blog.IMultidetailService)">
            <summary>
            Initializes a new instance of the <see cref="T:Happy.Weddings.Gateway.API.Controllers.v1.Blog.MultidetailController"/> class.
            </summary>
            <param name="multidetailService">The Multidetail service.</param>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.Blog.MultidetailController.GetAllMultiDetails(Happy.Weddings.Gateway.Core.DTO.Blog.Multidetail.MultidetailParameter)">
            <summary>
            Gets the Multidetail.
            </summary>
            <param name="multidetailParameter">The Multidetail parameters request.</param>
            <returns></returns>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.Blog.MultidetailController.GetMultiDetailsById(System.String)">
            <summary>
            Gets the Multidetail.
            </summary>
            <param name="multicodeId">The MultiCode identifier.</param>
            <returns></returns>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.Blog.MultidetailController.CreateMultiDetails(Happy.Weddings.Gateway.Core.DTO.Blog.Multidetail.CreateMultidetailBlogRequest)">
            <summary>
            Creates the Multidetail.
            </summary>
            <param name="request">The request.</param>
            <returns></returns>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.Blog.MultidetailController.UpdateMultiDetails(System.Int32,Happy.Weddings.Gateway.Core.DTO.Blog.Multidetail.UpdateMultidetailBlogRequest)">
            <summary>
            Updates the Multidetail.
            </summary>
            <param name="multidetailId">The Multidetail identifier.</param>
            <param name="request">The request.</param>
            <returns></returns>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.Blog.MultidetailController.DeleteMultiDetails(System.Int32)">
            <summary>
            Deletes the Multidetail.
            </summary>
            <param name="multidetailId">The Multidetail identifier.</param>
            <returns></returns>
        </member>
        <member name="T:Happy.Weddings.Gateway.API.Controllers.v1.Blog.ReviewController">
            <summary>
            Review operations handled by this controller
            </summary>
        </member>
        <member name="F:Happy.Weddings.Gateway.API.Controllers.v1.Blog.ReviewController.reviewService">
            <summary>
            The Review service
            </summary>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.Blog.ReviewController.#ctor(Happy.Weddings.Gateway.Core.Services.v1.Blog.IReviewService)">
            <summary>
            Initializes a new instance of the <see cref="T:Happy.Weddings.Gateway.API.Controllers.v1.Blog.ReviewController"/> class.
            </summary>
            <param name="reviewService">The Review service.</param>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.Blog.ReviewController.GetReviews(Happy.Weddings.Gateway.Core.DTO.Blog.Review.ReviewParametersRequest)">
            <summary>
            Gets the Review.
            </summary>
            <param name="reviewParametersRequest">The Review parameters request.</param>
            <returns></returns>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.Blog.ReviewController.GetReview(System.Int32)">
            <summary>
            Gets the Review.
            </summary>
            <param name="reviewId">The Review identifier.</param>
            <returns></returns>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.Blog.ReviewController.CreateReview(Happy.Weddings.Gateway.Core.DTO.Blog.Review.CreateReviewBlogRequest)">
            <summary>
            Creates the Review.
            </summary>
            <param name="request">The request.</param>
            <returns></returns>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.Blog.ReviewController.UpdateReview(System.Int32,Happy.Weddings.Gateway.Core.DTO.Blog.Review.UpdateReviewBlogRequest)">
            <summary>
            Updates the Review.
            </summary>
            <param name="reviewId">The Review identifier.</param>
            <param name="request">The request.</param>
            <returns></returns>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.Blog.ReviewController.DeleteReview(System.Int32)">
            <summary>
            Deletes the Review.
            </summary>
            <param name="reviewId">The Review identifier.</param>
            <returns></returns>
        </member>
        <member name="T:Happy.Weddings.Gateway.API.Controllers.v1.Blog.StoriesController">
            <summary>
            Blog stories operations handled by this controller
            </summary>
        </member>
        <member name="F:Happy.Weddings.Gateway.API.Controllers.v1.Blog.StoriesController.storyService">
            <summary>
            The story service
            </summary>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.Blog.StoriesController.#ctor(Happy.Weddings.Gateway.Core.Services.v1.Blog.IStoryService)">
            <summary>
            Initializes a new instance of the <see cref="T:Happy.Weddings.Gateway.API.Controllers.v1.Blog.StoriesController"/> class.
            </summary>
            <param name="storyService">The story service.</param>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.Blog.StoriesController.GetStories(Happy.Weddings.Gateway.Core.DTO.Blog.Story.StoryParametersRequest)">
            <summary>
            Gets the stories.
            </summary>
            <param name="storyParametersRequest">The story parameters request.</param>
            <returns></returns>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.Blog.StoriesController.GetStory(System.Int32)">
            <summary>
            Gets the story.
            </summary>
            <param name="storyId">The story identifier.</param>
            <returns></returns>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.Blog.StoriesController.GetTaggedDataByStoryId(System.Int32)">
            <summary>
            Gets the tagged data.
            </summary>
            <param name="storyId">The story identifier.</param>
            <returns></returns>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.Blog.StoriesController.CreateStory(Happy.Weddings.Gateway.Core.DTO.Blog.Story.CreateStoryRequest)">
            <summary>
            Creates the story.
            </summary>
            <param name="request">The request.</param>
            <returns></returns>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.Blog.StoriesController.UpdateStory(System.Int32,Happy.Weddings.Gateway.Core.DTO.Blog.Story.UpdateStoryRequest)">
            <summary>
            Updates the story.
            </summary>
            <param name="storyId">The story identifier.</param>
            <param name="request">The request.</param>
            <returns></returns>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.Blog.StoriesController.DeleteStory(System.Int32)">
            <summary>
            Deletes the story.
            </summary>
            <param name="storyId">The story identifier.</param>
            <returns></returns>
        </member>
        <member name="T:Happy.Weddings.Gateway.API.Controllers.v1.ECommerce.CartsController">
            <summary>
            carts operations handled by this controller
            </summary>
        </member>
        <member name="F:Happy.Weddings.Gateway.API.Controllers.v1.ECommerce.CartsController.cartService">
            <summary>
            The carts service
            </summary>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.ECommerce.CartsController.#ctor(Happy.Weddings.Gateway.Core.Services.v1.ECommerce.ICartService)">
            <summary>
            Initializes a new instance of the <see cref="T:Happy.Weddings.Gateway.API.Controllers.v1.ECommerce.CartsController"/> class.
            </summary>
            <param name="cartService">The carts service.</param>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.ECommerce.CartsController.GetCarts(Happy.Weddings.Gateway.Core.DTO.ECommerce.Cart.CartParameters)">
            <summary>
            Gets the Carts
            </summary>
            <param name="cartParameters">The carts Parameters.</param>
            <returns></returns> 
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.ECommerce.CartsController.GetCart(System.Int32)">
            <summary>
            Get the Carts.
            </summary>
            <param name="cartId">The Carts identifier.</param>
            <returns></returns>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.ECommerce.CartsController.GetCartByUserId(System.Int32)">
            <summary>
            Get the Carts.
            </summary>
            <param name="userId">The Carts identifier.</param>
            <returns></returns>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.ECommerce.CartsController.CreateCarts(Happy.Weddings.Gateway.Core.DTO.ECommerce.Cart.CreateCartsRequest)">
            <summary>
            Create the Carts.
            </summary>
            <param name="request">The request.</param>
            <returns></returns>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.ECommerce.CartsController.UpdateCart(System.Int32,Happy.Weddings.Gateway.Core.DTO.ECommerce.Cart.UpdateCartRequest)">
            <summary>
            Update the Carts.
            </summary>
            <param name="cartId">The Carts identifier.</param>
            <param name="request">The request.</param>
            <returns></returns>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.ECommerce.CartsController.DeleteCart(System.Int32)">
            <summary>
            Delete the Cart.
            </summary>
            <param name="cartId">The Carts identifier.</param>
            <returns></returns>
        </member>
        <member name="T:Happy.Weddings.Gateway.API.Controllers.v1.ECommerce.MulticodeController">
            <summary>
            Blog operations handled by this controller
            </summary>
        </member>
        <member name="F:Happy.Weddings.Gateway.API.Controllers.v1.ECommerce.MulticodeController.multicodeService">
            <summary>
            The Multicode service
            </summary>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.ECommerce.MulticodeController.#ctor(Happy.Weddings.Gateway.Core.Services.v1.ECommerce.IMulticodeService)">
            <summary>
            Initializes a new instance of the <see cref="T:Happy.Weddings.Gateway.API.Controllers.v1.ECommerce.MulticodeController"/> class.
            </summary>
            <param name="multicodeService">The Multicode service.</param>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.ECommerce.MulticodeController.GetAllMultiCodes">
            <summary>
            Gets all multi codes.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.ECommerce.MulticodeController.GetMultiCode(System.String)">
            <summary>
            Gets the Multicode.
            </summary>
            <param name="code">System Code.</param>
            <returns></returns>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.ECommerce.MulticodeController.CreateMultiCode(Happy.Weddings.Gateway.Core.DTO.ECommerce.MultiCode.CreateMulticodeEcommerceRequest)">
            <summary>
            Creates the Multicode.
            </summary>
            <param name="request">The request.</param>
            <returns></returns>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.ECommerce.MulticodeController.UpdateMultiCode(System.String,Happy.Weddings.Gateway.Core.DTO.ECommerce.MultiCode.UpdateMulticodeEcommerceRequest)">
            <summary>
            Updates the Multicode.
            </summary>
            <param name="code">System Code.</param>
            <param name="request">The request.</param>
            <returns></returns>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.ECommerce.MulticodeController.DeleteMultiCode(System.String)">
            <summary>
            Deletes the Multicode.
            </summary>
            <param name="code">System Code.</param>
            <returns></returns>
        </member>
        <member name="T:Happy.Weddings.Gateway.API.Controllers.v1.ECommerce.MultidetailController">
            <summary>
            Identitys multidetail operations handled by this controller
            </summary>
        </member>
        <member name="F:Happy.Weddings.Gateway.API.Controllers.v1.ECommerce.MultidetailController.multidetailService">
            <summary>
            The Multidetail service
            </summary>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.ECommerce.MultidetailController.#ctor(Happy.Weddings.Gateway.Core.Services.v1.ECommerce.IMultidetailService)">
            <summary>
            Initializes a new instance of the <see cref="T:Happy.Weddings.Gateway.API.Controllers.v1.ECommerce.MultidetailController"/> class.
            </summary>
            <param name="multidetailService">The Multidetail service.</param>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.ECommerce.MultidetailController.GetAllMultiDetails(Happy.Weddings.Gateway.Core.DTO.ECommerce.MultiDetail.MultidetailParameter)">
            <summary>
            Gets the Multidetail.
            </summary>
            <param name="multidetailParameter">The Multidetail parameters request.</param>
            <returns></returns>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.ECommerce.MultidetailController.GetMultiDetailsById(System.Int32)">
            <summary>
            Gets the Multidetail.
            </summary>
            <param name="multicodeId">The MultiCode identifier.</param>
            <returns></returns>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.ECommerce.MultidetailController.CreateMultiDetails(Happy.Weddings.Gateway.Core.DTO.ECommerce.MultiDetail.CreateMultidetailEcommerceRequest)">
            <summary>
            Creates the Multidetail.
            </summary>
            <param name="request">The request.</param>
            <returns></returns>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.ECommerce.MultidetailController.UpdateMultiDetails(System.Int32,Happy.Weddings.Gateway.Core.DTO.ECommerce.MultiDetail.UpdateMultidetailEcommerceRequest)">
            <summary>
            Updates the Multidetail.
            </summary>
            <param name="multidetailId">The Multidetail identifier.</param>
            <param name="request">The request.</param>
            <returns></returns>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.ECommerce.MultidetailController.DeleteMultiDetails(System.Int32)">
            <summary>
            Deletes the Multidetail.
            </summary>
            <param name="multidetailId">The Multidetail identifier.</param>
            <returns></returns>
        </member>
        <member name="T:Happy.Weddings.Gateway.API.Controllers.v1.ECommerce.OrderlocationController">
            <summary>
            OrderlocationController
            </summary>
            <seealso cref="T:Microsoft.AspNetCore.Mvc.Controller" />
        </member>
        <member name="F:Happy.Weddings.Gateway.API.Controllers.v1.ECommerce.OrderlocationController.orderlocationService">
            <summary>
            The orderlocation service
            </summary>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.ECommerce.OrderlocationController.#ctor(Happy.Weddings.Gateway.Core.Services.v1.ECommerce.IOrderlocationService)">
            <summary>
            Initializes a new instance of the <see cref="T:Happy.Weddings.Gateway.API.Controllers.v1.ECommerce.OrderlocationController"/> class.
            </summary>
            <param name="orderlocationService">The orderlocation service.</param>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.ECommerce.OrderlocationController.GetOrderlocations(Happy.Weddings.Gateway.Core.DTO.ECommerce.Orderlocation.OrderlocationParameters)">
            <summary>
            Gets the orderlocations.
            </summary>
            <param name="orderlocationParameters">The orderlocation parameters.</param>
            <returns></returns>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.ECommerce.OrderlocationController.GetOrderlocation(System.Int32)">
            <summary>
            Gets the orderlocation.
            </summary>
            <param name="orderlocationId">The orderlocation identifier.</param>
            <returns></returns>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.ECommerce.OrderlocationController.CreateOrderlocations(Happy.Weddings.Gateway.Core.DTO.ECommerce.Orderlocation.CreateOrderlocationRequest)">
            <summary>
            Creates the orderlocations.
            </summary>
            <param name="request">The request.</param>
            <returns></returns>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.ECommerce.OrderlocationController.UpdateOrderlocations(System.Int32,Happy.Weddings.Gateway.Core.DTO.ECommerce.Orderlocation.UpdateOrderlocationRequest)">
            <summary>
            Updates the orderlocations.
            </summary>
            <param name="orderlocationId">The orderlocation identifier.</param>
            <param name="request">The request.</param>
            <returns></returns>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.ECommerce.OrderlocationController.DeleteOrderlocations(System.Int32)">
            <summary>
            Deletes the orderlocations.
            </summary>
            <param name="orderlocationId">The orderlocation identifier.</param>
            <returns></returns>
        </member>
        <member name="T:Happy.Weddings.Gateway.API.Controllers.v1.ECommerce.OrderreturnController">
            <summary>
            OrderreturnController
            </summary>
            <seealso cref="T:Microsoft.AspNetCore.Mvc.Controller" />
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.ECommerce.OrderreturnController.#ctor(Happy.Weddings.Gateway.Core.Services.v1.ECommerce.IOrderreturnService)">
            <summary>
            Initializes a new instance of the <see cref="T:Happy.Weddings.Gateway.API.Controllers.v1.ECommerce.OrderreturnController"/> class.
            </summary>
            <param name="orderreturnService">The orderreturn service.</param>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.ECommerce.OrderreturnController.GetOrderreturns(Happy.Weddings.Gateway.Core.DTO.ECommerce.Orderreturn.OrderreturnParameters)">
            <summary>
            Gets the orderreturns.
            </summary>
            <param name="orderreturnParameters">The orderreturn parameters.</param>
            <returns></returns>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.ECommerce.OrderreturnController.GetOrderreturn(System.Int32)">
            <summary>
            Gets the orderreturn.
            </summary>
            <param name="orderreturnId">The order identifier.</param>
            <returns></returns>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.ECommerce.OrderreturnController.CreateOrderreturns(Happy.Weddings.Gateway.Core.DTO.ECommerce.Orderreturn.CreateOrderreturnRequest)">
            <summary>
            Creates the orderreturns.
            </summary>
            <param name="request">The request.</param>
            <returns></returns>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.ECommerce.OrderreturnController.UpdateOrderreturns(System.Int32,Happy.Weddings.Gateway.Core.DTO.ECommerce.Orderreturn.UpdateOrderreturnRequest)">
            <summary>
            Updates the orderreturns.
            </summary>
            <param name="orderreturnId">The order identifier.</param>
            <param name="request">The request.</param>
            <returns></returns>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.ECommerce.OrderreturnController.DeleteOrderreturns(System.Int32)">
            <summary>
            Deletes the orderreturns.
            </summary>
            <param name="orderreturnId">The order identifier.</param>
            <returns></returns>
        </member>
        <member name="T:Happy.Weddings.Gateway.API.Controllers.v1.ECommerce.OrdersController">
            <summary>
            Subscriptions operations handled by this controller
            </summary>
        </member>
        <member name="F:Happy.Weddings.Gateway.API.Controllers.v1.ECommerce.OrdersController.orderService">
            <summary>
            The orders service
            </summary>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.ECommerce.OrdersController.#ctor(Happy.Weddings.Gateway.Core.Services.v1.ECommerce.IOrderService)">
            <summary>
            Initializes a new instance of the <see cref="T:Happy.Weddings.Gateway.API.Controllers.v1.ECommerce.CartsController"/> class.
            </summary>
            <param name="orderService">The orders service.</param>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.ECommerce.OrdersController.GetOrders(Happy.Weddings.Gateway.Core.DTO.ECommerce.Order.OrderParameters)">
            <summary>
            Gets the Order
            </summary>
            <param name="orderParameters">The Orders Parameters.</param>
            <returns></returns> 
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.ECommerce.OrdersController.GetOrderById(System.Int32)">
            <summary>
            Gets the order.
            </summary>
            <param name="orderId">The order identifier.</param>
            <returns></returns>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.ECommerce.OrdersController.CreateOrders(Happy.Weddings.Gateway.Core.DTO.ECommerce.Order.CreateOrderRequest)">
            <summary>
            Creates the orders.
            </summary>
            <param name="request">The request.</param>
            <returns></returns>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.ECommerce.OrdersController.UpdateOrders(System.Int32,Happy.Weddings.Gateway.Core.DTO.ECommerce.Order.UpdateOrderRequest)">
            <summary>
            Updates the orders.
            </summary>
            <param name="orderId">The order identifier.</param>
            <param name="request">The request.</param>
            <returns></returns>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.ECommerce.OrdersController.DeleteOrders(System.Int32)">
            <summary>
            Deletes the orders.
            </summary>
            <param name="orderId">The order identifier.</param>
            <returns></returns>
        </member>
        <member name="T:Happy.Weddings.Gateway.API.Controllers.v1.ECommerce.ProductQuantityController">
            <summary>
            Subscriptions operations handled by this controller
            </summary>
        </member>
        <member name="F:Happy.Weddings.Gateway.API.Controllers.v1.ECommerce.ProductQuantityController.productquantityService">
            <summary>
            The ProductQuantity service
            </summary>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.ECommerce.ProductQuantityController.#ctor(Happy.Weddings.Gateway.Core.Services.v1.ECommerce.IProductquantityService)">
            <summary>
            Initializes a new instance of the <see cref="T:Happy.Weddings.Gateway.API.Controllers.v1.ECommerce.CartsController"/> class.
            </summary>
            <param name="productquantityService">The ProductQuantity service.</param>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.ECommerce.ProductQuantityController.GetProductquantitys(Happy.Weddings.Gateway.Core.DTO.ECommerce.Productquantity.ProductquantityParameters)">
            <summary>
            Gets the productquantitys.
            </summary>
            <param name="productquantityParameters">The productquantity parameters.</param>
            <returns></returns>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.ECommerce.ProductQuantityController.GetProductquantity(System.Int32)">
            <summary>
            Gets the productquantity.
            </summary>
            <param name="productquantityId">The productquantity identifier.</param>
            <returns></returns>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.ECommerce.ProductQuantityController.CreateProductquantitys(Happy.Weddings.Gateway.Core.DTO.ECommerce.Productquantity.CreateProductquantitysRequest)">
            <summary>
            Creates the productquantitys.
            </summary>
            <param name="request">The request.</param>
            <returns></returns>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.ECommerce.ProductQuantityController.UpdateProductquantity(System.Int32,Happy.Weddings.Gateway.Core.DTO.ECommerce.Productquantity.UpdateProductquantityRequest)">
            <summary>
            Updates the productquantity.
            </summary>
            <param name="productquantityId">The productquantity identifier.</param>
            <param name="request">The request.</param>
            <returns></returns>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.ECommerce.ProductQuantityController.DeleteProductquantity(System.Int32)">
            <summary>
            Deletes the productquantity.
            </summary>
            <param name="productquantityId">The productquantity identifier.</param>
            <returns></returns>
        </member>
        <member name="T:Happy.Weddings.Gateway.API.Controllers.v1.ECommerce.ProductsController">
            <summary>
            Subscriptions operations handled by this controller
            </summary>
        </member>
        <member name="F:Happy.Weddings.Gateway.API.Controllers.v1.ECommerce.ProductsController.productService">
            <summary>
            The subscription service
            </summary>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.ECommerce.ProductsController.#ctor(Happy.Weddings.Gateway.Core.Services.v1.ECommerce.IProductService)">
            <summary>
            Initializes a new instance of the <see cref="T:Happy.Weddings.Gateway.API.Controllers.v1.ECommerce.ProductsController"/> class.
            </summary>
            <param name="productService">The subscription service.</param>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.ECommerce.ProductsController.GetProducts(Happy.Weddings.Gateway.Core.DTO.ECommerce.Product.ProductParameters)">
            <summary>
            Gets the Carts
            </summary>
            <param name="productParameters">The subcription Plans Parameters.</param>
            <returns></returns> 
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.ECommerce.ProductsController.GetProduct(System.Int32)">
            <summary>
            Get the Carts.
            </summary>
            <param name="productId">The Carts identifier.</param>
            <returns></returns>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.ECommerce.ProductsController.CreateProducts(Happy.Weddings.Gateway.Core.DTO.ECommerce.Product.CreateProductsRequest)">
            <summary>
            Create the Carts.
            </summary>
            <param name="request">The request.</param>
            <returns></returns>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.ECommerce.ProductsController.UpdateProduct(System.Int32,Happy.Weddings.Gateway.Core.DTO.ECommerce.Product.UpdateProductRequest)">
            <summary>
            Update the Product.
            </summary>
            <param name="productId">The subcriptionplan identifier.</param>
            <param name="request">The request.</param>
            <returns></returns>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.ECommerce.ProductsController.DeleteProduct(System.Int32)">
            <summary>
            Delete the Product.
            </summary>
            <param name="productId">The subcriptionplan identifier.</param>
            <returns></returns>
        </member>
        <member name="T:Happy.Weddings.Gateway.API.Controllers.v1.ECommerce.RegistryController">
            <summary>
            OrderreturnController
            </summary>
            <seealso cref="T:Microsoft.AspNetCore.Mvc.Controller" />
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.ECommerce.RegistryController.#ctor(Happy.Weddings.Gateway.Core.Services.v1.ECommerce.IRegistryService)">
            <summary>
            Initializes a new instance of the <see cref="T:Happy.Weddings.Gateway.API.Controllers.v1.ECommerce.OrderreturnController"/> class.
            </summary>
            <param name="registryService">The orderreturn service.</param>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.ECommerce.RegistryController.GetRegistrys(Happy.Weddings.Gateway.Core.DTO.ECommerce.Registry.RegistryParameters)">
            <summary>
            Gets the registrys.
            </summary>
            <param name="registryParameters">The registry parameters.</param>
            <returns></returns>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.ECommerce.RegistryController.GetRegistryById(System.Int32)">
            <summary>
            Gets the registry by identifier.
            </summary>
            <param name="registryId">The registry identifier.</param>
            <returns></returns>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.ECommerce.RegistryController.CreateRegistrys(Happy.Weddings.Gateway.Core.DTO.ECommerce.Registry.CreateRegistryRequest)">
            <summary>
            Creates the registrys.
            </summary>
            <param name="request">The request.</param>
            <returns></returns>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.ECommerce.RegistryController.UpdateRegistrys(System.Int32,Happy.Weddings.Gateway.Core.DTO.ECommerce.Registry.UpdateRegistryRequest)">
            <summary>
            Updates the registrys.
            </summary>
            <param name="registryId">The registry identifier.</param>
            <param name="request">The request.</param>
            <returns></returns>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.ECommerce.RegistryController.DeleteOrderreturns(System.Int32)">
            <summary>
            Deletes the orderreturns.
            </summary>
            <param name="registryId">The registry identifier.</param>
            <returns></returns>
        </member>
        <member name="T:Happy.Weddings.Gateway.API.Controllers.v1.EventAssistant.BudgeterController">
            <summary>
            Subscriptions operations handled by this controller
            </summary>
        </member>
        <member name="F:Happy.Weddings.Gateway.API.Controllers.v1.EventAssistant.BudgeterController.budgeterService">
            <summary>
            The budgeter service
            </summary>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.EventAssistant.BudgeterController.#ctor(Happy.Weddings.Gateway.Core.Services.v1.EventAssistant.IBudgeterService)">
            <summary>
            Initializes a new instance of the <see cref="T:Happy.Weddings.Gateway.API.Controllers.v1.EventAssistant.BudgeterController"/> class.
            </summary>
            <param name="budgeterService">The budgeter service.</param>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.EventAssistant.BudgeterController.GetBudgeters(Happy.Weddings.Gateway.Core.DTO.EventAssistant.Budgeter.BudgeterParameters)">
            <summary>
            Gets the budgeters.
            </summary>
            <param name="budgeterParameters">The budgeter parameters.</param>
            <returns></returns>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.EventAssistant.BudgeterController.GetBudgeterById(System.Int32)">
            <summary>
            Gets the budgeter by identifier.
            </summary>
            <param name="budgeterId">The budgeter identifier.</param>
            <returns></returns>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.EventAssistant.BudgeterController.CreateBudgeters(Happy.Weddings.Gateway.Core.DTO.EventAssistant.Budgeter.CreateBudgeterRequest)">
            <summary>
            Creates the budgeters.
            </summary>
            <param name="request">The request.</param>
            <returns></returns>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.EventAssistant.BudgeterController.UpdateBudgeters(System.Int32,Happy.Weddings.Gateway.Core.DTO.EventAssistant.Budgeter.UpdateBudgeterRequest)">
            <summary>
            Updates the budgeters.
            </summary>
            <param name="budgeterId">The budgeter identifier.</param>
            <param name="request">The request.</param>
            <returns></returns>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.EventAssistant.BudgeterController.DeleteBudgeters(System.Int32)">
            <summary>
            Deletes the budgeters.
            </summary>
            <param name="budgeterId">The budgeter identifier.</param>
            <returns></returns>
        </member>
        <member name="T:Happy.Weddings.Gateway.API.Controllers.v1.EventAssistant.ChecklistController">
            <summary>
            Subscriptions operations handled by this controller
            </summary>
        </member>
        <member name="F:Happy.Weddings.Gateway.API.Controllers.v1.EventAssistant.ChecklistController.checklistService">
            <summary>
            The checklist service
            </summary>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.EventAssistant.ChecklistController.#ctor(Happy.Weddings.Gateway.Core.Services.v1.EventAssistant.IChecklistService)">
            <summary>
            Initializes a new instance of the <see cref="T:Happy.Weddings.Gateway.API.Controllers.v1.EventAssistant.ChecklistController"/> class.
            </summary>
            <param name="checklistService">The checklist service.</param>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.EventAssistant.ChecklistController.GetChecklists(Happy.Weddings.Gateway.Core.DTO.EventAssistant.Checklist.ChecklistParameters)">
            <summary>
            Gets the checklists.
            </summary>
            <param name="checklistParameters">The checklist parameters.</param>
            <returns></returns>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.EventAssistant.ChecklistController.GetChecklistById(System.Int32)">
            <summary>
            Gets the checklist by identifier.
            </summary>
            <param name="checklistId">The checklist identifier.</param>
            <returns></returns>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.EventAssistant.ChecklistController.CreateChecklists(Happy.Weddings.Gateway.Core.DTO.EventAssistant.Checklist.CreateChecklistRequest)">
            <summary>
            Creates the checklists.
            </summary>
            <param name="request">The request.</param>
            <returns></returns>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.EventAssistant.ChecklistController.UpdateChecklists(System.Int32,Happy.Weddings.Gateway.Core.DTO.EventAssistant.Checklist.UpdateChecklistRequest)">
            <summary>
            Updates the checklists.
            </summary>
            <param name="checklistId">The checklist identifier.</param>
            <param name="request">The request.</param>
            <returns></returns>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.EventAssistant.ChecklistController.DeleteChecklists(System.Int32)">
            <summary>
            Deletes the checklists.
            </summary>
            <param name="checklistId">The checklist identifier.</param>
            <returns></returns>
        </member>
        <member name="T:Happy.Weddings.Gateway.API.Controllers.v1.EventAssistant.GuestEventlistController">
            <summary>
            Subscriptions operations handled by this controller
            </summary>
        </member>
        <member name="F:Happy.Weddings.Gateway.API.Controllers.v1.EventAssistant.GuestEventlistController.guesteventlistService">
            <summary>
            The checklist service
            </summary>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.EventAssistant.GuestEventlistController.#ctor(Happy.Weddings.Gateway.Core.Services.v1.EventAssistant.IGuesteventlistService)">
            <summary>
            Initializes a new instance of the <see cref="T:Happy.Weddings.Gateway.API.Controllers.v1.EventAssistant.ChecklistController"/> class.
            </summary>
            <param name="guesteventlistService">The checklist service.</param>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.EventAssistant.GuestEventlistController.GetGuesteventlists(Happy.Weddings.Gateway.Core.DTO.EventAssistant.Guesteventlist.GuesteventlistParameters)">
            <summary>
            Gets the guesteventlists.
            </summary>
            <param name="guesteventlistParameters">The guesteventlist parameters.</param>
            <returns></returns>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.EventAssistant.GuestEventlistController.GetGuesteventlistById(System.Int32)">
            <summary>
            Gets the guesteventlist by identifier.
            </summary>
            <param name="guesteventlistId">The guesteventlist identifier.</param>
            <returns></returns>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.EventAssistant.GuestEventlistController.CreateGuesteventlists(Happy.Weddings.Gateway.Core.DTO.EventAssistant.Guesteventlist.CreateGuesteventlistRequest)">
            <summary>
            Creates the guesteventlists.
            </summary>
            <param name="request">The request.</param>
            <returns></returns>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.EventAssistant.GuestEventlistController.UpdateGuesteventlists(System.Int32,Happy.Weddings.Gateway.Core.DTO.EventAssistant.Guesteventlist.UpdateGuesteventlistRequest)">
            <summary>
            Updates the guesteventlists.
            </summary>
            <param name="guesteventlistId">The guesteventlist identifier.</param>
            <param name="request">The request.</param>
            <returns></returns>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.EventAssistant.GuestEventlistController.DeleteGuestlists(System.Int32)">
            <summary>
            Deletes the guestlists.
            </summary>
            <param name="guesteventlistId">The guesteventlist identifier.</param>
            <returns></returns>
        </member>
        <member name="T:Happy.Weddings.Gateway.API.Controllers.v1.EventAssistant.GuestlistController">
            <summary>
            Subscriptions operations handled by this controller
            </summary>
        </member>
        <member name="F:Happy.Weddings.Gateway.API.Controllers.v1.EventAssistant.GuestlistController.guestlistService">
            <summary>
            The checklist service
            </summary>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.EventAssistant.GuestlistController.#ctor(Happy.Weddings.Gateway.Core.Services.v1.EventAssistant.IGuestlistService)">
            <summary>
            Initializes a new instance of the <see cref="T:Happy.Weddings.Gateway.API.Controllers.v1.EventAssistant.ChecklistController"/> class.
            </summary>
            <param name="guestlistService">The checklist service.</param>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.EventAssistant.GuestlistController.GetGuestlists(Happy.Weddings.Gateway.Core.DTO.EventAssistant.Guestlist.GuestlistParameters)">
            <summary>
            Gets the guestlists.
            </summary>
            <param name="guestlistParameters">The guestlist Parameters.</param>
            <returns></returns>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.EventAssistant.GuestlistController.GetGuestlistById(System.Int32)">
            <summary>
            Gets the guestlist by identifier.
            </summary>
            <param name="guestlistId">The checklist identifier.</param>
            <returns></returns>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.EventAssistant.GuestlistController.CreateGuestlists(Happy.Weddings.Gateway.Core.DTO.EventAssistant.Guestlist.CreateGuestlistRequest)">
            <summary>
            Creates the guestlists.
            </summary>
            <param name="request">The request.</param>
            <returns></returns>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.EventAssistant.GuestlistController.UpdateGuestlists(System.Int32,Happy.Weddings.Gateway.Core.DTO.EventAssistant.Guestlist.UpdateGuestlistRequest)">
            <summary>
            Updates the guestlists.
            </summary>
            <param name="guestlistId">The checklist identifier.</param>
            <param name="request">The request.</param>
            <returns></returns>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.EventAssistant.GuestlistController.DeleteGuestlists(System.Int32)">
            <summary>
            Deletes the guestlists.
            </summary>
            <param name="guestlistId">The checklist identifier.</param>
            <returns></returns>
        </member>
        <member name="T:Happy.Weddings.Gateway.API.Controllers.v1.EventAssistant.InvitationsController">
            <summary>
            Subscriptions operations handled by this controller
            </summary>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.EventAssistant.InvitationsController.#ctor(Happy.Weddings.Gateway.Core.Services.v1.EventAssistant.IInvitationService)">
            <summary>
            Initializes a new instance of the <see cref="T:Happy.Weddings.Gateway.API.Controllers.v1.EventAssistant.InvitationsController"/> class.
            </summary>
            <param name="invitationService">The invitation service.</param>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.EventAssistant.InvitationsController.GetInvitations(Happy.Weddings.Gateway.Core.DTO.EventAssistant.Invitation.InvitationParameters)">
            <summary>
            Gets the invitations.
            </summary>
            <param name="guestlistParameters">The guestlist parameters.</param>
            <returns></returns>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.EventAssistant.InvitationsController.GetInvitationById(System.Int32)">
            <summary>
            Gets the invitation by identifier.
            </summary>
            <param name="invitationId">The invitation identifier.</param>
            <returns></returns>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.EventAssistant.InvitationsController.CreateInvitations(Happy.Weddings.Gateway.Core.DTO.EventAssistant.Invitation.CreateInvitationRequest)">
            <summary>
            Creates the invitations.
            </summary>
            <param name="request">The request.</param>
            <returns></returns>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.EventAssistant.InvitationsController.UpdateInvitations(System.Int32,Happy.Weddings.Gateway.Core.DTO.EventAssistant.Invitation.UpdateInvitationRequest)">
            <summary>
            Updates the invitations.
            </summary>
            <param name="invitationId">The invitation identifier.</param>
            <param name="request">The request.</param>
            <returns></returns>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.EventAssistant.InvitationsController.DeleteInvitations(System.Int32)">
            <summary>
            Deletes the invitations.
            </summary>
            <param name="invitationId">The invitation identifier.</param>
            <returns></returns>
        </member>
        <member name="T:Happy.Weddings.Gateway.API.Controllers.v1.EventAssistant.MulticodeController">
            <summary>
            Blog operations handled by this controller
            </summary>
        </member>
        <member name="F:Happy.Weddings.Gateway.API.Controllers.v1.EventAssistant.MulticodeController.multicodeService">
            <summary>
            The Multicode service
            </summary>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.EventAssistant.MulticodeController.#ctor(Happy.Weddings.Gateway.Core.Services.v1.EventAssistant.IMulticodeService)">
            <summary>
            Initializes a new instance of the <see cref="T:Happy.Weddings.Gateway.API.Controllers.v1.EventAssistant.MulticodeController"/> class.
            </summary>
            <param name="multicodeService">The Multicode service.</param>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.EventAssistant.MulticodeController.GetAllMultiCodes">
            <summary>
            Gets all multi codes.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.EventAssistant.MulticodeController.GetMultiCode(System.String)">
            <summary>
            Gets the Multicode.
            </summary>
            <param name="code">System Code.</param>
            <returns></returns>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.EventAssistant.MulticodeController.CreateMultiCode(Happy.Weddings.Gateway.Core.DTO.EventAssistant.MultiCode.CreateMulticodeEventAssistantRequest)">
            <summary>
            Creates the Multicode.
            </summary>
            <param name="request">The request.</param>
            <returns></returns>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.EventAssistant.MulticodeController.UpdateMultiCode(System.String,Happy.Weddings.Gateway.Core.DTO.EventAssistant.MultiCode.UpdateMulticodeEventAssistantRequest)">
            <summary>
            Updates the Multicode.
            </summary>
            <param name="code">System Code.</param>
            <param name="request">The request.</param>
            <returns></returns>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.EventAssistant.MulticodeController.DeleteMultiCode(System.String)">
            <summary>
            Deletes the Multicode.
            </summary>
            <param name="code">System Code.</param>
            <returns></returns>
        </member>
        <member name="T:Happy.Weddings.Gateway.API.Controllers.v1.EventAssistant.MultidetailController">
            <summary>
            Identitys multidetail operations handled by this controller
            </summary>
        </member>
        <member name="F:Happy.Weddings.Gateway.API.Controllers.v1.EventAssistant.MultidetailController.multidetailService">
            <summary>
            The Multidetail service
            </summary>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.EventAssistant.MultidetailController.#ctor(Happy.Weddings.Gateway.Core.Services.v1.EventAssistant.IMultidetailService)">
            <summary>
            Initializes a new instance of the <see cref="T:Happy.Weddings.Gateway.API.Controllers.v1.EventAssistant.MultidetailController"/> class.
            </summary>
            <param name="multidetailService">The Multidetail service.</param>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.EventAssistant.MultidetailController.GetAllMultiDetails(Happy.Weddings.Gateway.Core.DTO.EventAssistant.MultiDetail.MultidetailParameter)">
            <summary>
            Gets the Multidetail.
            </summary>
            <param name="multidetailParameter">The Multidetail parameters request.</param>
            <returns></returns>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.EventAssistant.MultidetailController.GetMultiDetailsById(System.Int32)">
            <summary>
            Gets the Multidetail.
            </summary>
            <param name="multicodeId">The MultiCode identifier.</param>
            <returns></returns>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.EventAssistant.MultidetailController.CreateMultiDetails(Happy.Weddings.Gateway.Core.DTO.EventAssistant.MultiDetail.CreateMultidetailEventAssistantRequest)">
            <summary>
            Creates the Multidetail.
            </summary>
            <param name="request">The request.</param>
            <returns></returns>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.EventAssistant.MultidetailController.UpdateMultiDetails(System.Int32,Happy.Weddings.Gateway.Core.DTO.EventAssistant.MultiDetail.UpdateMultidetailEventAssistantRequest)">
            <summary>
            Updates the Multidetail.
            </summary>
            <param name="multidetailId">The Multidetail identifier.</param>
            <param name="request">The request.</param>
            <returns></returns>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.EventAssistant.MultidetailController.DeleteMultiDetails(System.Int32)">
            <summary>
            Deletes the Multidetail.
            </summary>
            <param name="multidetailId">The Multidetail identifier.</param>
            <returns></returns>
        </member>
        <member name="T:Happy.Weddings.Gateway.API.Controllers.v1.EventAssistant.UserinvitationsController">
            <summary>
            Subscriptions operations handled by this controller
            </summary>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.EventAssistant.UserinvitationsController.#ctor(Happy.Weddings.Gateway.Core.Services.v1.EventAssistant.IUserinvitationService)">
            <summary>
            Initializes a new instance of the <see cref="T:Happy.Weddings.Gateway.API.Controllers.v1.EventAssistant.UserinvitationsController"/> class.
            </summary>
            <param name="userinvitationService">The userinvitation service.</param>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.EventAssistant.UserinvitationsController.GetUserInvitations(Happy.Weddings.Gateway.Core.DTO.EventAssistant.Userinvitation.UserinvitationParameters)">
            <summary>
            Gets the user invitations.
            </summary>
            <param name="userinvitationParameters">The userinvitation parameters.</param>
            <returns></returns>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.EventAssistant.UserinvitationsController.GetUserinvitationById(System.Int32)">
            <summary>
            Gets the userinvitation by identifier.
            </summary>
            <param name="userinvitationId">The userinvitation identifier.</param>
            <returns></returns>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.EventAssistant.UserinvitationsController.CreateUserInvitations(Happy.Weddings.Gateway.Core.DTO.EventAssistant.Userinvitation.CreateUserInvitationListRequest)">
            <summary>
            Creates the user invitations.
            </summary>
            <param name="request">The request.</param>
            <returns></returns>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.EventAssistant.UserinvitationsController.UpdateUserInvitations(System.Int32,Happy.Weddings.Gateway.Core.DTO.EventAssistant.Userinvitation.UpdateUserinvitationRequest)">
            <summary>
            Updates the user invitations.
            </summary>
            <param name="userinvitationId">The userinvitation identifier.</param>
            <param name="request">The request.</param>
            <returns></returns>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.EventAssistant.UserinvitationsController.DeleteUserInvitations(System.Int32)">
            <summary>
            Deletes the user invitations.
            </summary>
            <param name="userinvitationId">The userinvitation identifier.</param>
            <returns></returns>
        </member>
        <member name="T:Happy.Weddings.Gateway.API.Controllers.v1.Identity.KYCDetailsController">
            <summary>
            KYCDetailsController
            </summary>
        </member>
        <member name="F:Happy.Weddings.Gateway.API.Controllers.v1.Identity.KYCDetailsController.kycDetailService">
            <summary>
            The kyc detail service
            </summary>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.Identity.KYCDetailsController.#ctor(Happy.Weddings.Gateway.Core.Services.v1.Identity.IKYCDetailsService)">
            <summary>
            Initializes a new instance of the <see cref="T:Happy.Weddings.Gateway.API.Controllers.v1.Identity.KYCDetailsController"/> class.
            </summary>
            <param name="kycDetailService">The kyc detail service.</param>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.Identity.KYCDetailsController.CreateKYCData(System.Int32,Happy.Weddings.Gateway.Core.DTO.Identity.KYCData.KYCFormData)">
            <summary>
            Creates the kyc data.
            </summary>
            <param name="profileId"></param>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.Identity.KYCDetailsController.UpdateKYCData(System.Int32,Happy.Weddings.Gateway.Core.DTO.Identity.KYCData.KYCFormData)">
            <summary>
            Updates the kyc data.
            </summary>
            <param name="profileId">The profile identifier.</param>
            <param name="data">The data.</param>
            <returns></returns>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.Identity.KYCDetailsController.UpdateKYCPortion(System.Int32,Happy.Weddings.Gateway.Core.DTO.Identity.KYCData.UpdateKYCPortionRequest)">
            <summary>
            Updates the kyc portion.
            </summary>
            <param name="profileId">The profile identifier.</param>
            <param name="request">The request.</param>
            <returns></returns>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.Identity.KYCDetailsController.GetKYCDatas(System.Int32)">
            <summary>
            Gets the profile.
            </summary>
            <param name="profileId">The profile identifier.</param>
            <returns></returns>
        </member>
        <member name="T:Happy.Weddings.Gateway.API.Controllers.v1.Identity.MulticodeController">
            <summary>
            Multicode operations handled by this controller
            </summary>
        </member>
        <member name="F:Happy.Weddings.Gateway.API.Controllers.v1.Identity.MulticodeController.multicodeService">
            <summary>
            The Multicode service
            </summary>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.Identity.MulticodeController.#ctor(Happy.Weddings.Gateway.Core.Services.v1.Identity.IMulticodeService)">
            <summary>
            Initializes a new instance of the <see cref="T:Happy.Weddings.Gateway.API.Controllers.v1.Identity.MulticodeController"/> class.
            </summary>
            <param name="multicodeService">The Multicode service.</param>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.Identity.MulticodeController.GetAllMultiCodes">
            <summary>
            Gets all multi codes.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.Identity.MulticodeController.GetMultiCode(System.String)">
            <summary>
            Gets the Multicode.
            </summary>
            <param name="code">System Code.</param>
            <returns></returns>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.Identity.MulticodeController.CreateMultiCode(Happy.Weddings.Gateway.Core.DTO.Identity.Multicode.CreateMulticodeIdentityRequest)">
            <summary>
            Creates the Multicode.
            </summary>
            <param name="request">The request.</param>
            <returns></returns>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.Identity.MulticodeController.UpdateMultiCode(System.String,Happy.Weddings.Gateway.Core.DTO.Identity.Multicode.UpdateMulticodeIdentityRequest)">
            <summary>
            Updates the Multicode.
            </summary>
            <param name="code">System Code.</param>
            <param name="request">The request.</param>
            <returns></returns>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.Identity.MulticodeController.DeleteMultiCode(System.String)">
            <summary>
            Deletes the Multicode.
            </summary>
            <param name="code">System Code.</param>
            <returns></returns>
        </member>
        <member name="T:Happy.Weddings.Gateway.API.Controllers.v1.Identity.MultidetailController">
            <summary>
            Multidetail operations handled by this controller
            </summary>
        </member>
        <member name="F:Happy.Weddings.Gateway.API.Controllers.v1.Identity.MultidetailController.multidetailService">
            <summary>
            The Multidetail service
            </summary>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.Identity.MultidetailController.#ctor(Happy.Weddings.Gateway.Core.Services.v1.Identity.IMultidetailService)">
            <summary>
            Initializes a new instance of the <see cref="T:Happy.Weddings.Gateway.API.Controllers.v1.Identity.MultidetailController"/> class.
            </summary>
            <param name="multidetailService">The Multidetail service.</param>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.Identity.MultidetailController.GetAllMultiDetails(Happy.Weddings.Gateway.Core.DTO.Identity.Multidetail.MultidetailParameter)">
            <summary>
            Gets the Multidetail.
            </summary>
            <param name="multidetailParameter">The Multidetail parameters request.</param>
            <returns></returns>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.Identity.MultidetailController.GetMultiDetailsByCode(System.String)">
            <summary>
            Gets the Multidetail.
            </summary>
            <param name="code">System Code.</param>
            <returns></returns>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.Identity.MultidetailController.CreateMultiDetails(Happy.Weddings.Gateway.Core.DTO.Identity.Multidetail.CreateMultidetailIdentityRequest)">
            <summary>
            Creates the Multidetail.
            </summary>
            <param name="request">The request.</param>
            <returns></returns>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.Identity.MultidetailController.UpdateMultiDetails(System.Int32,Happy.Weddings.Gateway.Core.DTO.Identity.Multidetail.UpdateMultidetailIdentityRequest)">
            <summary>
            Updates the Multidetail.
            </summary>
            <param name="multidetailId">The Multidetail identifier.</param>
            <param name="request">The request.</param>
            <returns></returns>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.Identity.MultidetailController.DeleteMultiDetails(System.Int32)">
            <summary>
            Deletes the Multidetail.
            </summary>
            <param name="multidetailId">The Multidetail identifier.</param>
            <returns></returns>
        </member>
        <member name="T:Happy.Weddings.Gateway.API.Controllers.v1.Identity.UserProfilesController">
            <summary>
            Identity users operations handled by this controller
            </summary>
        </member>
        <member name="F:Happy.Weddings.Gateway.API.Controllers.v1.Identity.UserProfilesController.userService">
            <summary>
            The story service
            </summary>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.Identity.UserProfilesController.#ctor(Happy.Weddings.Gateway.Core.Services.v1.Identity.IUserProfileService)">
            <summary>
            Initializes a new instance of the <see cref="T:Happy.Weddings.Gateway.API.Controllers.v1.Identity.UserProfilesController" /> class.
            </summary>
            <param name="userService">The user service.</param>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.Identity.UserProfilesController.GetUserProfiles(Happy.Weddings.Gateway.Core.DTO.Identity.Profile.UserProfileParameters)">
            <summary>
            Gets the users.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.Identity.UserProfilesController.GetUserProfile(System.Int32)">
            <summary>
            Gets the user.
            </summary>
            <param name="profileId">The user identifier.</param>
            <returns></returns>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.Identity.UserProfilesController.CreateUser(Happy.Weddings.Gateway.Core.DTO.Identity.Profile.CreateUserProfileRequest)">
            <summary>
            Creates the user.
            </summary>
            <param name="request">The request.</param>
            <returns></returns>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.Identity.UserProfilesController.UpdateUserProfile(System.Int32,Happy.Weddings.Gateway.Core.DTO.Identity.Profile.UpdateUserProfileRequest)">
            <summary>
            Updates the user.
            </summary>
            <param name="profileId">The user identifier.</param>
            <param name="request">The request.</param>
            <returns></returns>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.Identity.UserProfilesController.DeleteUserProfile(System.Int32)">
            <summary>
            Deletes the user.
            </summary>
            <param name="profileId">The user identifier.</param>
            <returns></returns>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.Identity.UserProfilesController.GetUserId(Happy.Weddings.Gateway.Core.DTO.Identity.Profile.UserIdParameters)">
            <summary>
            Get UserId
            </summary>
            <param name="idParameters"></param>
            <returns></returns>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.Identity.UserProfilesController.SendOtp(System.Int32,Happy.Weddings.Gateway.Core.DTO.Identity.Profile.SendOtpRequest)">
            <summary>
            SendOtp
            </summary>
            <param name="profileId"></param>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.Identity.UserProfilesController.VerifyOtp(System.Int32,Happy.Weddings.Gateway.Core.DTO.Identity.Profile.VerifyOtpRequest)">
            <summary>
            VerifyOtp
            </summary>
            <param name="profileId"></param>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="T:Happy.Weddings.Gateway.API.Controllers.v1.LeadManagement.LeadsController">
            <summary>
            LeadsController
            </summary>
        </member>
        <member name="F:Happy.Weddings.Gateway.API.Controllers.v1.LeadManagement.LeadsController.leadService">
            <summary>
            The lead service
            </summary>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.LeadManagement.LeadsController.#ctor(Happy.Weddings.Gateway.Core.Services.v1.LeadManagement.ILeadService)">
            <summary>
            Initializes a new instance of the <see cref="T:Happy.Weddings.Gateway.API.Controllers.v1.LeadManagement.LeadsController"/> class.
            </summary>
            <param name="leadService">The lead service.</param>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.LeadManagement.LeadsController.GetLeads(Happy.Weddings.Gateway.Core.DTO.LeadManagement.Lead.LeadParameters)">
            <summary>
            Gets the leads.
            </summary>
            <param name="leadParameters">The lead parameters.</param>
            <returns></returns>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.LeadManagement.LeadsController.GetLead(System.String)">
            <summary>
            Gets the lead.
            </summary>
            <param name="leadId">The lead identifier.</param>
            <returns></returns>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.LeadManagement.LeadsController.GetLeadsByVendor(Happy.Weddings.Gateway.Core.DTO.LeadManagement.Lead.LeadsByVendorParameters)">
            <summary>
            Gets the leads By Vendor.
            </summary>
            <param name="leadsByVendorParameters">The lead By Vendor parameters.</param>
            <returns></returns>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.LeadManagement.LeadsController.CreateLead(Happy.Weddings.Gateway.Core.DTO.LeadManagement.Lead.CreateLeadDataCollectionRequest)">
            <summary>
            Creates the lead.
            </summary>
            <param name="request">The request.</param>
            <returns></returns>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.LeadManagement.LeadsController.UpdateLead(System.Int32,Happy.Weddings.Gateway.Core.DTO.LeadManagement.Lead.UpdateLeadRequest)">
            <summary>
            Update the lead.
            </summary>
            <param name="leadId"></param>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.LeadManagement.LeadsController.UpdateLeadPortion(System.Int32,Happy.Weddings.Gateway.Core.DTO.LeadManagement.Lead.UpdateLeadPortionRequest)">
            <summary>
            Updates lead portion..
            </summary>
            <param name="leadDatacollectionId">The leadDatacollection identifier.</param>
            <param name="request">The request.</param>
            <returns></returns>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.LeadManagement.LeadsController.DeleteLead(System.Int32)">
            <summary>
            Deletes the lead.
            </summary>
            <param name="leadId">The lead identifier.</param>
            <returns></returns>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.LeadManagement.LeadsController.CreateFollowLead(System.Int32,Happy.Weddings.Gateway.Core.DTO.LeadManagement.CreateLeadValidationRequest)">
            <summary>
            Creates the follow lead.
            </summary>
            <param name="leadId">The lead identifier.</param>
            <param name="request">The request.</param>
            <returns></returns>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.LeadManagement.LeadsController.UpdateFollowLead(System.Int32,System.Int32,Happy.Weddings.Gateway.Core.DTO.LeadManagement.Lead.UpdateLeadValidationRequest)">
            <summary>
            Updates the follow lead.
            </summary>
            <param name="leadId">The lead identifier.</param>
            <param name="leadValidationId">The lead validation identifier.</param>
            <param name="request">The request.</param>
            <returns></returns>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.LeadManagement.LeadsController.CreateAssignLead(System.Int32,Happy.Weddings.Gateway.Core.DTO.LeadManagement.CreateLeadAssignRequest)">
            <summary>
            Creates the assign lead.
            </summary>
            <param name="leadId">The lead identifier.</param>
            <param name="request">The request.</param>
            <returns></returns>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.LeadManagement.LeadsController.GetLeadQuotes(System.Int32,Happy.Weddings.Gateway.Core.DTO.LeadManagement.Lead.LeadQuoteParameters)">
            <summary>
            Get lead quotes.
            </summary>
            <param name="leadId"></param>
            <param name="quoteParameters"></param>
            <returns></returns>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.LeadManagement.LeadsController.CreateLeadQuote(System.Int32,Happy.Weddings.Gateway.Core.DTO.LeadManagement.Lead.CreateLeadQuoteRequest)">
            <summary>
            Creates lead quote
            </summary>
            <param name="leadId"></param>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.LeadManagement.LeadsController.UpdateLeadQuote(System.Int32,Happy.Weddings.Gateway.Core.DTO.LeadManagement.Lead.UpdateLeadQuoteRequest)">
            <summary>
            Updates lead quote.
            </summary>
            <param name="quoteId"></param>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.LeadManagement.LeadsController.DeleteLeadQuote(System.Int32)">
            <summary>
            Delete lead quote.
            </summary>
            <param name="quoteId"></param>
            <returns></returns>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.LeadManagement.LeadsController.GetLeadStatus(System.Int32,Happy.Weddings.Gateway.Core.DTO.LeadManagement.Lead.LeadStatusParameter)">
            <summary>
            Gets the lead status.
            </summary>
            <param name="leadId">The lead identifier.</param>
            <param name="leadStatusParameters">The lead status parameters.</param>
            <returns></returns>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.LeadManagement.LeadsController.GetLeadCount(System.String,Happy.Weddings.Gateway.Core.DTO.LeadManagement.Lead.LeadCountTotAmtParameter)">
            <summary>
            GetLeadCount
            </summary>
            <param name="vendorId"></param>
            <param name="leadCountTotAmt"></param>
            <returns></returns>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.LeadManagement.LeadsController.GetLeadTotalAmount(System.String,Happy.Weddings.Gateway.Core.DTO.LeadManagement.Lead.LeadCountTotAmtParameter)">
            <summary>
            GetLeadTotalAmount
            </summary>
            <param name="vendorId"></param>
            <param name="leadCountTotAmt"></param>
            <returns></returns>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.LeadManagement.LeadsController.GetLeadId(Happy.Weddings.Gateway.Core.DTO.LeadManagement.Lead.LeadIdParameters)">
            <summary>
            Gets the lead identifier.
            </summary>
            <param name="idParameters">The identifier parameters.</param>
            <returns></returns>
        </member>
        <member name="T:Happy.Weddings.Gateway.API.Controllers.v1.LeadManagement.MulticodeController">
            <summary>
            Lead operations handled by this controller
            </summary>
        </member>
        <member name="F:Happy.Weddings.Gateway.API.Controllers.v1.LeadManagement.MulticodeController.multicodeService">
            <summary>
            The Multicode service
            </summary>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.LeadManagement.MulticodeController.#ctor(Happy.Weddings.Gateway.Core.Services.v1.LeadManagement.IMulticodeService)">
            <summary>
            Initializes a new instance of the <see cref="T:Happy.Weddings.Gateway.API.Controllers.v1.LeadManagement.MulticodeController"/> class.
            </summary>
            <param name="multicodeService">The Multicode service.</param>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.LeadManagement.MulticodeController.GetAllMultiCodes">
            <summary>
            Gets all multi codes.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.LeadManagement.MulticodeController.GetMultiCode(System.String)">
            <summary>
            Gets the Multicode.
            </summary>
            <param name="code">System Code.</param>
            <returns></returns>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.LeadManagement.MulticodeController.CreateMultiCode(Happy.Weddings.Gateway.Core.DTO.LeadManagement.Multicode.CreateMulticodeLeadRequest)">
            <summary>
            Creates the Multicode.
            </summary>
            <param name="request">The request.</param>
            <returns></returns>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.LeadManagement.MulticodeController.UpdateMultiCode(System.String,Happy.Weddings.Gateway.Core.DTO.LeadManagement.Multicode.UpdateMulticodeLeadRequest)">
            <summary>
            Updates the Multicode.
            </summary>
            <param name="code">System Code.</param>
            <param name="request">The request.</param>
            <returns></returns>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.LeadManagement.MulticodeController.DeleteMultiCode(System.String)">
            <summary>
            Deletes the Multicode.
            </summary>
            <param name="code">System Code.</param>
            <returns></returns>
        </member>
        <member name="T:Happy.Weddings.Gateway.API.Controllers.v1.LeadManagement.MultidetailController">
            <summary>
            Lead operations handled by this controller
            </summary>
        </member>
        <member name="F:Happy.Weddings.Gateway.API.Controllers.v1.LeadManagement.MultidetailController.multidetailService">
            <summary>
            The Multidetail service
            </summary>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.LeadManagement.MultidetailController.#ctor(Happy.Weddings.Gateway.Core.Services.v1.LeadManagement.IMultidetailService)">
            <summary>
            Initializes a new instance of the <see cref="T:Happy.Weddings.Gateway.API.Controllers.v1.LeadManagement.MultidetailController"/> class.
            </summary>
            <param name="multidetailService">The Multidetail service.</param>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.LeadManagement.MultidetailController.GetAllMultiDetails(Happy.Weddings.Gateway.Core.DTO.LeadManagement.Multidetail.MultidetailParameter)">
            <summary>
            Gets the Multidetail.
            </summary>
            <param name="multidetailParameter">The Multidetail parameters request.</param>
            <returns></returns>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.LeadManagement.MultidetailController.GetMultiDetailsById(System.Int32)">
            <summary>
            Gets the Multidetail.
            </summary>
            <param name="multicodeId">The MultiCode identifier.</param>
            <returns></returns>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.LeadManagement.MultidetailController.CreateMultiDetails(Happy.Weddings.Gateway.Core.DTO.LeadManagement.Multidetail.CreateMultidetailLeadRequest)">
            <summary>
            Creates the Multidetail.
            </summary>
            <param name="request">The request.</param>
            <returns></returns>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.LeadManagement.MultidetailController.UpdateMultiDetails(System.Int32,Happy.Weddings.Gateway.Core.DTO.LeadManagement.Multidetail.UpdateMultidetailLeadRequest)">
            <summary>
            Updates the Multidetail.
            </summary>
            <param name="multidetailId">The Multidetail identifier.</param>
            <param name="request">The request.</param>
            <returns></returns>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.LeadManagement.MultidetailController.DeleteMultiDetails(System.Int32)">
            <summary>
            Deletes the Multidetail.
            </summary>
            <param name="multidetailId">The Multidetail identifier.</param>
            <returns></returns>
        </member>
        <member name="T:Happy.Weddings.Gateway.API.Controllers.v1.Vendor.AssetsController">
            <summary>
            Vendor Assets operations handled by this controller
            </summary>
        </member>
        <member name="F:Happy.Weddings.Gateway.API.Controllers.v1.Vendor.AssetsController.assetService">
            <summary>
            The asset service
            </summary>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.Vendor.AssetsController.#ctor(Happy.Weddings.Gateway.Core.Services.v1.Vendor.IAssetService)">
            <summary>
            Initializes a new instance of the <see cref="T:Happy.Weddings.Gateway.API.Controllers.v1.Vendor.AssetsController"/> class.
            </summary>
            <param name="assetService">The asset service.</param>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.Vendor.AssetsController.AddAssets(Happy.Weddings.Gateway.Core.DTO.Vendor.Asset.AddAssetRequest)">
            <summary>
            Add the Vendor Assets.
            </summary>
            <param name="request">The request.</param>
            <returns></returns>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.Vendor.AssetsController.UpdateAsset(System.Int32,Happy.Weddings.Gateway.Core.Services.v1.Vendor.UpdateAssetRequest)">
            <summary>
            Updates the Asset.
            </summary>
            <param name="assetId"></param>
            <param name="request">The request.</param>
            <returns></returns>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.Vendor.AssetsController.DeleteAsset(System.Int32)">
            <summary>
            Deletes the Asset.
            </summary>
            <param name="assetId">The asset identifier.</param>
            <returns></returns>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.Vendor.AssetsController.GetAssetById(System.Int32)">
            <summary>
            Get the  Assets by Id.
            </summary>
            <param name="assetId">The Offer identifier.</param>
            <returns></returns>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.Vendor.AssetsController.GetAllAssets(Happy.Weddings.Gateway.Core.DTO.Vendor.Asset.AssetParameters)">
            <summary>
            Gets all Assets
            </summary>
            <param name="assetParameters">The  Asset Parameters.</param>
            <returns></returns>
        </member>
        <member name="T:Happy.Weddings.Gateway.API.Controllers.v1.Vendor.EventsController">
            <summary>
            Vendors Event operations handled by this controller
            </summary>
        </member>
        <member name="F:Happy.Weddings.Gateway.API.Controllers.v1.Vendor.EventsController.eventService">
            <summary>
            The event service
            </summary>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.Vendor.EventsController.#ctor(Happy.Weddings.Gateway.Core.Services.v1.Vendor.IEventService)">
            <summary>
            Initializes a new instance of the <see cref="T:Happy.Weddings.Gateway.API.Controllers.v1.Vendor.EventsController"/> class.
            </summary>
            <param name="eventService">The event service.</param>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.Vendor.EventsController.GetEventsByCondition(Happy.Weddings.Gateway.Core.DTO.Vendor.Event.EventParameters)">
            <summary>
            Gets the Events by condition.
            </summary>
            <param name="eventParameters">The event parameters.</param>
            <returns></returns>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.Vendor.EventsController.GetEventDetailsById(Happy.Weddings.Gateway.Core.DTO.Vendor.Event.EventVendorParameters)">
            <summary>
            Gets the event details by vendor.
            </summary>
            <param name="eventVendorParameters"></param>
            <returns></returns>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.Vendor.EventsController.GetEventById(System.Int32)">
            <summary>
            Gets the event.
            </summary>
            <param name="eventId"></param>
            <returns></returns>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.Vendor.EventsController.CreateEvent(Happy.Weddings.Gateway.Core.DTO.Vendor.Event.CreateEventRequest)">
            <summary>
            Creates the Event.
            </summary>
            <param name="request">The request.</param>
            <returns></returns>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.Vendor.EventsController.UpdateEvent(System.Int32,Happy.Weddings.Gateway.Core.DTO.Vendor.Event.UpdateEventRequest)">
            <summary>
            Updates Event.
            </summary>
            <param name="eventId">The event identifier.</param>
            <param name="request">The request.</param>
            <returns></returns>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.Vendor.EventsController.DeleteEvent(System.Int32)">
            <summary>
            Deletes the Event.
            </summary>
            <param name="eventId">The Event identifier.</param>
            <returns></returns>
        </member>
        <member name="T:Happy.Weddings.Gateway.API.Controllers.v1.Vendor.EventsGalleryController">
            <summary>
            Vendors Event Gallery operations handled by this controller
            </summary>
            <seealso cref="T:Microsoft.AspNetCore.Mvc.ControllerBase" />
        </member>
        <member name="F:Happy.Weddings.Gateway.API.Controllers.v1.Vendor.EventsGalleryController.eventGalleryService">
            <summary>
            The event gallery service
            </summary>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.Vendor.EventsGalleryController.#ctor(Happy.Weddings.Gateway.Core.Services.v1.Vendor.IEventGalleryService)">
            <summary>
            Initializes a new instance of the <see cref="T:Happy.Weddings.Gateway.API.Controllers.v1.Vendor.EventsGalleryController"/> class.
            </summary>
            <param name="eventGalleryService">The event gallery service.</param>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.Vendor.EventsGalleryController.GetEventGalleryByVendorId(Happy.Weddings.Gateway.Core.DTO.Vendor.EventGallery.EventGalleryParameters)">
            <summary>
            Gets the events gallery by vendor identifier.
            </summary>
            <param name="eventGalleryParameters">The event gallery parameters.</param>
            <returns></returns>
        </member>
        <member name="T:Happy.Weddings.Gateway.API.Controllers.v1.Vendor.OffersController">
            <summary>
            Offers operations handled by this controller
            </summary>
        </member>
        <member name="F:Happy.Weddings.Gateway.API.Controllers.v1.Vendor.OffersController.offerService">
            <summary>
            The offer service
            </summary>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.Vendor.OffersController.#ctor(Happy.Weddings.Gateway.Core.Services.v1.Vendor.IOfferService)">
            <summary>
            Initializes a new instance of the <see cref="T:Happy.Weddings.Gateway.API.Controllers.v1.Vendor.OffersController"/> class.
            </summary>
            <param name="offerService">The offer service.</param>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.Vendor.OffersController.GetOffers(Happy.Weddings.Gateway.Core.DTO.Vendor.Offers.OffersParameter)">
            <summary>
            Gets the  Offers
            </summary>
            <param name="offersParameters">The  Offers Parameters.</param>
            <returns></returns>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.Vendor.OffersController.GetOffer(System.Int32)">
            <summary>
            Get the  Offers.
            </summary>
            <param name="offerId">The Offer identifier.</param>
            <returns></returns>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.Vendor.OffersController.CreateOffer(Happy.Weddings.Gateway.Core.DTO.Vendor.Offers.CreateOfferRequest)">
            <summary>
            Create the Offers.
            </summary>
            <param name="request">The request.</param>
            <returns></returns>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.Vendor.OffersController.UpdateOffer(System.Int32,Happy.Weddings.Gateway.Core.DTO.Vendor.Offers.UpdateOfferRequest)">
            <summary>
            Update the Offers.
            </summary>
            <param name="offerId">The offer identifier.</param>
            <param name="request">The request.</param>
            <returns></returns>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.Vendor.OffersController.DeleteOffer(System.Int32)">
            <summary>
            Delete the Offer.
            </summary>
            <param name="offerId">The offer identifier.</param>
            <returns></returns>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.Vendor.OffersController.GetSubcriptionOffers(Happy.Weddings.Gateway.Core.DTO.Vendor.SubscriptionOffers.SubscriptionOffersParameter)">
            <summary>
            Gets the subcription offers.
            </summary>
            <param name="subscriptionOffersParameters">The subscription offers parameters.</param>
            <returns></returns>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.Vendor.OffersController.GetSubcriptionOffer(System.Int32)">
            <summary>
            Get the Subcription Offers.
            </summary>
            <param name="subscriptionOffersId">The SubcriptionOffers identifier.</param>
            <returns></returns>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.Vendor.OffersController.CreateSubcriptionOffers(Happy.Weddings.Gateway.Core.DTO.Vendor.SubscriptionOffers.CreateSubscriptionOfferRequest)">
            <summary>
            Create the Subcription Offers.
            </summary>
            <param name="request">The request.</param>
            <returns></returns>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.Vendor.OffersController.UpdateSubcriptionOffers(System.Int32,Happy.Weddings.Gateway.Core.DTO.Vendor.SubscriptionOffers.UpdateSubscriptionOfferRequest)">
            <summary>
            Update the Subcription Offers.
            </summary>
            <param name="subscriptionOffersId">The subcriptionOffers identifier.</param>
            <param name="request">The request.</param>
            <returns></returns>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.Vendor.OffersController.DeleteSubcriptionOffers(System.Int32)">
            <summary>
            Delete the Subcription Offers.
            </summary>
            <param name="subscriptionOffersId">The subcriptionbenefit identifier.</param>
            <returns></returns>
        </member>
        <member name="T:Happy.Weddings.Gateway.API.Controllers.v1.Vendor.ReviewCommentsController">
            <summary>
            Reviews operations handled by this controller
            </summary>
        </member>
        <member name="F:Happy.Weddings.Gateway.API.Controllers.v1.Vendor.ReviewCommentsController.reviewCommentService">
            <summary>
            The review comment service
            </summary>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.Vendor.ReviewCommentsController.#ctor(Happy.Weddings.Gateway.Core.Services.v1.Vendor.IReviewCommentService)">
            <summary>
            Initializes a new instance of the <see cref="T:Happy.Weddings.Gateway.API.Controllers.v1.Vendor.ReviewCommentsController"/> class.
            </summary>
            <param name="reviewCommentService">The review comment service.</param>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.Vendor.ReviewCommentsController.GetReviews(Happy.Weddings.Gateway.Core.DTO.Vendor.ReviewComments.ReviewsParameter)">
            <summary>
            Gets the  Reviews
            </summary>
            <param name="reviewsParameter">The  Reviews Parameters.</param>
            <returns></returns>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.Vendor.ReviewCommentsController.GetReview(System.Int32)">
            <summary>
            Get the  Reviews.
            </summary>
            <param name="reviewId">The Review identifier.</param>
            <returns></returns>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.Vendor.ReviewCommentsController.CreateReview(Happy.Weddings.Gateway.Core.DTO.Vendor.ReviewComments.CreateReviewRequest)">
            <summary>
            Create the Review.
            </summary>
            <param name="request">The request.</param>
            <returns></returns>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.Vendor.ReviewCommentsController.UpdateReview(System.Int32,Happy.Weddings.Gateway.Core.DTO.Vendor.ReviewComments.UpdateReviewRequest)">
            <summary>
            Update the Reviews.
            </summary>
            <param name="reviewId">The offer identifier.</param>
            <param name="request">The request.</param>
            <returns></returns>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.Vendor.ReviewCommentsController.DeleteReview(System.Int32)">
            <summary>
            Delete the Reviews.
            </summary>
            <param name="reviewId">The review identifier.</param>
            <returns></returns>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.Vendor.ReviewCommentsController.GetCommentReplies(Happy.Weddings.Gateway.Core.DTO.Vendor.ReviewComments.CommentReplyParameter)">
            <summary>
            Gets the  Comment Replies
            </summary>
            <param name="commentReplyParameter">The  Comment Replies Parameters.</param>
            <returns></returns>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.Vendor.ReviewCommentsController.GetCommentReply(System.Int32,Happy.Weddings.Gateway.Core.DTO.Vendor.ReviewComments.ReplyCountParameter)">
            <summary>
            Get the  CommentReply.
            </summary>
            <param name="replyCountParameter">The CommentReply identifier.</param>
            <param name="commentreplyId">The CommentReply identifier.</param>
            <returns></returns>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.Vendor.ReviewCommentsController.UpdateCommentReply(System.Int32,Happy.Weddings.Gateway.Core.DTO.Vendor.ReviewComments.UpdateCommentReplyRequest)">
            <summary>
            Update the CommentReply.
            </summary>
            <param name="commentreplyId">The CommentReply identifier.</param>
            <param name="request">The request.</param>
            <returns></returns>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.Vendor.ReviewCommentsController.DeleteCommentReply(System.Int32)">
            <summary>
            Delete the CommentReply.
            </summary>
            <param name="commentReplyId">The CommentReply identifier.</param>
            <returns></returns>
        </member>
        <member name="T:Happy.Weddings.Gateway.API.Controllers.v1.Vendor.ServiceQuestionController">
            <summary>
            Vendor Questions ans Answer operations handled by this controller
            </summary>
            <seealso cref="T:Microsoft.AspNetCore.Mvc.ControllerBase" />
        </member>
        <member name="F:Happy.Weddings.Gateway.API.Controllers.v1.Vendor.ServiceQuestionController.serviceQuestionService">
            <summary>
            The service question service
            </summary>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.Vendor.ServiceQuestionController.#ctor(Happy.Weddings.Gateway.Core.Services.v1.Vendor.IServiceQuestionService)">
            <summary>
            Initializes a new instance of the <see cref="T:Happy.Weddings.Gateway.API.Controllers.v1.Vendor.ServiceQuestionController"/> class.
            </summary>
            <param name="serviceQuestionService">The service question service.</param>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.Vendor.ServiceQuestionController.GetAllServiceQuestionsByServiceType(Happy.Weddings.Gateway.Core.DTO.Vendor.ServiceQuestion.ServiceQuestionParameters)">
            <summary>
            Gets the type of the service question by service.
            </summary>
            <param name="serviceQuestionParameters">The service type identifier.</param>
            <returns></returns>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.Vendor.ServiceQuestionController.GetAllServiceAnswerByServiceQuestion(System.Int32)">
            <summary>
            Gets all service answer by service question.
            </summary>
            <param name="serviceQuestionId">The service question identifier.</param>
            <returns></returns>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.Vendor.ServiceQuestionController.CreateServiceQuestion(Happy.Weddings.Gateway.Core.DTO.Vendor.ServiceQuestion.CreateServiceQuestionRequest)">
            <summary>
            Create the service question 
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.Vendor.ServiceQuestionController.UpdateServiceQuestion(System.Int32,Happy.Weddings.Gateway.Core.DTO.Vendor.ServiceQuestion.UpdateServiceQuestionRequest)">
            <summary>
            Update the service question
            </summary>
            <param name="questionId"></param>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.Vendor.ServiceQuestionController.DeleteServiceQuestion(System.Int32)">
            <summary>
            Deletes the service question.
            </summary>
            <param name="questionId">The question identifier.</param>
            <returns></returns>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.Vendor.ServiceQuestionController.CreateServiceAnswer(Happy.Weddings.Gateway.Core.DTO.Vendor.ServiceAnswer.ServiceAnswerRequest)">
            <summary>
            Creates the service answer.
            </summary>
            <param name="request">The request.</param>
            <returns></returns>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.Vendor.ServiceQuestionController.UpdateServiceAnswer(System.Int32,Happy.Weddings.Gateway.Core.DTO.Vendor.ServiceAnswer.ServiceAnswerDetails)">
            <summary>
            Updates the service answer.
            </summary>
            <param name="questionId">The question identifier.</param>
            <param name="request">The request.</param>
            <returns></returns>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.Vendor.ServiceQuestionController.DeleteServiceAnswer(System.Int32,Happy.Weddings.Gateway.Core.DTO.Vendor.ServiceAnswer.ServiceAnswerDetails)">
            <summary>
            Deletes the service answer.
            </summary>
            <param name="questionId">The question identifier.</param>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.Vendor.ServiceQuestionController.GetServiceQuestionsById(Happy.Weddings.Gateway.Core.DTO.Vendor.ServiceQuestion.ServiceQuestionServiceTypeParameters)">
            <summary>
            Gets the type of the service question by service type and id.
            </summary>
            <param name="serviceQuestionServiceTypeParameters">The service type identifier.</param>
            <returns></returns>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.Vendor.ServiceQuestionController.GetServiceAnswersById(System.Int32,System.String,System.Int32)">
            <summary>
            Gets the service answer by service type and id.
            </summary>
            <param name="serviceQuestionId">The service type identifier.</param>
            <param name="Id">The service type identifier.</param>
            <param name="serviceAnswerId">The service type identifier.</param>
            <returns></returns>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.Vendor.ServiceQuestionController.GetAllVendorQuestionAnswersById(System.String,System.Boolean)">
            <summary>
            Gets all service answer by Vendor.
            </summary>
            <param name="Id">The Vendor identifier.</param>
            <param name="IsForVendor"></param>
            <returns></returns>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.Vendor.ServiceQuestionController.CreateVendorQuestionAnswer(Happy.Weddings.Gateway.Core.DTO.Vendor.ServiceQuestion.CreateVendorQuestionAnswerRequest)">
            <summary>
            Create Vendor Question Answer.
            </summary>
            <param name="request">The request.</param>
            <returns></returns>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.Vendor.ServiceQuestionController.UpdateVendorQuestionAnswer(System.String,Happy.Weddings.Gateway.Core.DTO.Vendor.Vendorquestionanswer.UpdateVendorQusetionAnswerDetailsRequest)">
            <summary>
            Update the vendor answer.
            </summary>
            <param name="vendorleadId">The vendor identifier.</param>
            <param name="request">The request.</param>
            <returns></returns>
        </member>
        <member name="T:Happy.Weddings.Gateway.API.Controllers.v1.Vendor.ServicesController">
            <summary>
            Vendor Services operations handled by this controller
            </summary>
        </member>
        <member name="F:Happy.Weddings.Gateway.API.Controllers.v1.Vendor.ServicesController.servicesService">
            <summary>
            The services service
            </summary>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.Vendor.ServicesController.#ctor(Happy.Weddings.Gateway.Core.Services.v1.Vendor.IServicesService)">
            <summary>
            Initializes a new instance of the <see cref="T:Happy.Weddings.Gateway.API.Controllers.v1.Vendor.ServicesController"/> class.
            </summary>
            <param name="servicesService">The services service.</param>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.Vendor.ServicesController.AddService(Happy.Weddings.Gateway.Core.DTO.Vendor.Service.AddServicesRequests)">
            <summary>
            Add the Vendor Services.
            </summary>
            <param name="request">The request.</param>
            <returns></returns>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.Vendor.ServicesController.UpdateService(System.Int32,Happy.Weddings.Gateway.Core.DTO.Vendor.Service.UpdateServiceRequest)">
            <summary>
            Updates the service.
            </summary>
            <param name="serviceId"></param>
            <param name="request">The request.</param>
            <returns></returns>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.Vendor.ServicesController.DeleteService(System.Int32)">
            <summary>
            Deletes the service.
            </summary>
            <param name="serviceId">The service identifier.</param>
            <returns></returns>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.Vendor.ServicesController.GetAllServices(Happy.Weddings.Gateway.Core.DTO.Vendor.Service.ServicesParameters)">
            <summary>
            Gets the services.
            </summary>
            <param name="serviceParameters">The service parameters.</param>
            <returns></returns>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.Vendor.ServicesController.SearchServices(Happy.Weddings.Gateway.Core.DTO.Vendor.Service.SearchParameters)">
             <summary>
            Search the Services.
             </summary>
             <param name="searchParameters">The search services parameters.</param>
             <returns></returns>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.Vendor.ServicesController.GetServicesofVendor(System.String)">
            <summary>
            Gets the services of vendor.
            </summary>
            <param name="vendorId">The vendor identifier.</param>
            <returns></returns>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.Vendor.ServicesController.GetServiceOfferedByServiceId(System.Int32)">
            <summary>
            Gets the service offered by service identifier.
            </summary>
            <param name="serviceId">The service identifier.</param>
            <returns></returns>
        </member>
        <member name="T:Happy.Weddings.Gateway.API.Controllers.v1.Vendor.ServiceSubscriptionsController">
            <summary>
            Vendors Subcriptions operations handled by this controller
            </summary>
        </member>
        <member name="F:Happy.Weddings.Gateway.API.Controllers.v1.Vendor.ServiceSubscriptionsController.serviceSubscriptionService">
            <summary>
            The service subscription service
            </summary>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.Vendor.ServiceSubscriptionsController.#ctor(Happy.Weddings.Gateway.Core.Services.v1.Vendor.IServiceSubscriptionService)">
            <summary>
            Initializes a new instance of the <see cref="T:Happy.Weddings.Gateway.API.Controllers.v1.Vendor.ServiceSubscriptionsController"/> class.
            </summary>
            <param name="serviceSubscriptionService">The service subscription.</param>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.Vendor.ServiceSubscriptionsController.GetServiceSubscriptions(Happy.Weddings.Gateway.Core.DTO.Vendor.ServiceSubscription.ServiceSubscriptionsParameter)">
            <summary>
            Gets the Service Subcription 
            </summary>
            <param name="serviceSubscriptionsParameter">The Service subcription  Parameters.</param>
            <returns></returns>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.Vendor.ServiceSubscriptionsController.GetServiceSubscriptionById(System.Int32)">
            <summary>
            Get the Service Subscription.
            </summary>
            <param name="serviceSubscriptionId">The Service Subscription identifier.</param>
            <returns></returns>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.Vendor.ServiceSubscriptionsController.CreateServiceSubscription(Happy.Weddings.Gateway.Core.DTO.Vendor.ServiceSubscription.CreateServiceSubscriptionRequest)">
            <summary>
            Create the Service Subscription
            </summary>
            <param name="request">The request.</param>
            <returns></returns>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.Vendor.ServiceSubscriptionsController.UpdateVendorSubscription(System.Int32,Happy.Weddings.Gateway.Core.DTO.Vendor.ServiceSubscription.UpdateServiceSubscriptionRequest)">
            <summary>
            Update the servicesubscription 
            </summary>
            <param name="servicesubscriptionId">The vendor subscription identifier.</param>
            <param name="request">The request.</param>
            <returns></returns>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.Vendor.ServiceSubscriptionsController.DeleteServiceSubscription(System.Int32)">
            <summary>
            Delete the service subscription.
            </summary>
            <param name="servicesubscriptionId">The subcriptionbenefit identifier.</param>
            <returns></returns>
        </member>
        <member name="T:Happy.Weddings.Gateway.API.Controllers.v1.Vendor.ServiceTopupsController">
            <summary>
            ServiceTopup operations handled by this controller
            </summary>
        </member>
        <member name="F:Happy.Weddings.Gateway.API.Controllers.v1.Vendor.ServiceTopupsController.serviceTopupService">
            <summary>
            The service topup service
            </summary>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.Vendor.ServiceTopupsController.#ctor(Happy.Weddings.Gateway.Core.Services.v1.Vendor.IServiceTopupService)">
            <summary>
            Initializes a new instance of the <see cref="T:Happy.Weddings.Gateway.API.Controllers.v1.Vendor.ServiceTopupsController"/> class.
            </summary>
            <param name="serviceTopupService">The service topup service.</param>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.Vendor.ServiceTopupsController.GetServiceTopups(Happy.Weddings.Gateway.Core.DTO.Vendor.ServiceTopup.ServiceTopupParameter)">
            <summary>
            Gets the ServiceTopup
            </summary>
            <param name="serviceTopupParameter">The ServiceTopup  Parameters.</param>
            <returns></returns>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.Vendor.ServiceTopupsController.GetServiceTopupById(System.Int32)">
            <summary>
            Get the ServiceTopup
            </summary>
            <param name="servicetopupId">The ServiceTopupidentifier.</param>
            <returns></returns>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.Vendor.ServiceTopupsController.CreateServiceTopup(Happy.Weddings.Gateway.Core.DTO.Vendor.ServiceTopup.CreateServiceTopupRequest)">
            <summary>
            Create the ServiceTopup
            </summary>
            <param name="request">The request.</param>
            <returns></returns>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.Vendor.ServiceTopupsController.UpdateServiceTopup(System.Int32,Happy.Weddings.Gateway.Core.DTO.Vendor.ServiceTopup.UpdateServiceTopupRequest)">
            <summary>
            Update the ServiceTopup
            </summary>
            <param name="servicesubscriptionId">The ServiceTopup identifier.</param>
            <param name="request">The request.</param>
            <returns></returns>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.Vendor.ServiceTopupsController.DeleteServiceTopup(System.Int32)">
            <summary>
            Delete the ServiceTopup
            </summary>
            <param name="servicetopupId">The ServiceTopup identifier.</param>
            <returns></returns>
        </member>
        <member name="T:Happy.Weddings.Gateway.API.Controllers.v1.Vendor.SubscriptionBenefitsController">
            <summary>
            Vendors Subcriptions Benefits operations handled by this controller
            </summary>
        </member>
        <member name="F:Happy.Weddings.Gateway.API.Controllers.v1.Vendor.SubscriptionBenefitsController.subscriptionBenefitService">
            <summary>
            The subscription benefit service
            </summary>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.Vendor.SubscriptionBenefitsController.#ctor(Happy.Weddings.Gateway.Core.Services.v1.Vendor.ISubscriptionBenefitService)">
            <summary>
            Initializes a new instance of the <see cref="T:Happy.Weddings.Gateway.API.Controllers.v1.Vendor.SubscriptionBenefitsController"/> class.
            </summary>
            <param name="subscriptionBenefitService">The subscription benefit service.</param>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.Vendor.SubscriptionBenefitsController.GetSubcriptionPlans(Happy.Weddings.Gateway.Core.DTO.Vendor.ServiceBenefit.SubscriptionBenefitsParameter)">
            <summary>
            Gets the Subcription Benefits
            </summary>
            <param name="subscriptionBenefitsParameters">The subcription Plans Parameters.</param>
            <returns></returns>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.Vendor.SubscriptionBenefitsController.GetSubcriptionPlan(System.Int32)">
            <summary>
            Get the Subcription Benefits.
            </summary>
            <param name="subcriptionBenefitId">The SubcriptionBenefits identifier.</param>
            <returns></returns>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.Vendor.SubscriptionBenefitsController.CreateSubcriptionBenefit(Happy.Weddings.Gateway.Core.DTO.Vendor.ServiceBenefit.CreateSubscriptionBenefitRequest)">
            <summary>
            Create the Subcription Benefits.
            </summary>
            <param name="request">The request.</param>
            <returns></returns>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.Vendor.SubscriptionBenefitsController.UpdateSubcriptionBenefit(System.Int32,Happy.Weddings.Gateway.Core.DTO.Vendor.ServiceBenefit.UpdateSubscriptionBenefitRequest)">
            <summary>
            Update the Subcription Benefit.
            </summary>
            <param name="subcriptionbenefitId">The subcriptionbenefit identifier.</param>
            <param name="request">The request.</param>
            <returns></returns>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.Vendor.SubscriptionBenefitsController.DeleteSubcriptionBenefit(System.Int32)">
            <summary>
            Delete the Subcription Benefit.
            </summary>
            <param name="subcriptionbenefitId">The subcriptionbenefit identifier.</param>
            <returns></returns>
        </member>
        <member name="T:Happy.Weddings.Gateway.API.Controllers.v1.Vendor.SubscriptionlocationsController">
            <summary>
            Subcriptions Locations operations handled by this controller
            </summary>
        </member>
        <member name="F:Happy.Weddings.Gateway.API.Controllers.v1.Vendor.SubscriptionlocationsController.subscriptionlocationService">
            <summary>
            The subscriptionlocation service
            </summary>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.Vendor.SubscriptionlocationsController.#ctor(Happy.Weddings.Gateway.Core.Services.v1.Vendor.ISubscriptionLocationService)">
            <summary>
            Initializes a new instance of the <see cref="T:Happy.Weddings.Gateway.API.Controllers.v1.Vendor.SubscriptionlocationsController"/> class.
            </summary>
            <param name="subscriptionlocationService">The subscriptionlocation service.</param>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.Vendor.SubscriptionlocationsController.GetSubcriptionLocations(Happy.Weddings.Gateway.Core.DTO.Vendor.SubscriptionLocation.SubscriptionLocationsParameter)">
            <summary>
            Gets the subscriptionLocations
            </summary>
            <param name="subscriptionLocationsParameter">The subcription Plans Parameters.</param>
            <returns></returns>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.Vendor.SubscriptionlocationsController.GetSubcriptionPlan(System.Int32)">
            <summary>
            Get the subscription Location
            </summary>
            <param name="subscriptionLocationId">The subscriptionLocation identifier.</param>
            <returns></returns>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.Vendor.SubscriptionlocationsController.CreateSubcriptionLocation(Happy.Weddings.Gateway.Core.DTO.Vendor.SubscriptionLocation.CreateSubscriptionLocationRequest)">
            <summary>
            Create the subscriptionLocation
            </summary>
            <param name="request">The request.</param>
            <returns></returns>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.Vendor.SubscriptionlocationsController.UpdateSubcriptionPlan(System.Int32,Happy.Weddings.Gateway.Core.DTO.Vendor.SubscriptionLocation.UpdateSubscriptionLocationRequest)">
            <summary>
            Update the subscriptionLocation
            </summary>
            <param name="subscriptionLocationId">The subscriptionLocation identifier.</param>
            <param name="request">The request.</param>
            <returns></returns>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.Vendor.SubscriptionlocationsController.DeleteSubcriptionPlan(System.Int32)">
            <summary>
            Delete the subscriptionLocation.
            </summary>
            <param name="subscriptionLocationId">The subscriptionLocation identifier.</param>
            <returns></returns>
        </member>
        <member name="T:Happy.Weddings.Gateway.API.Controllers.v1.Vendor.SubscriptionsController">
            <summary>
            Subscriptions operations handled by this controller
            </summary>
        </member>
        <member name="F:Happy.Weddings.Gateway.API.Controllers.v1.Vendor.SubscriptionsController.subscriptionService">
            <summary>
            The subscription service
            </summary>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.Vendor.SubscriptionsController.#ctor(Happy.Weddings.Gateway.Core.Services.v1.Vendor.ISubscriptionService)">
            <summary>
            Initializes a new instance of the <see cref="T:Happy.Weddings.Gateway.API.Controllers.v1.Vendor.SubscriptionsController"/> class.
            </summary>
            <param name="subscriptionService">The subscription service.</param>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.Vendor.SubscriptionsController.GetSubcriptionPlans(Happy.Weddings.Gateway.Core.DTO.Vendor.SubscriptionPlan.SubscriptionPlansParameter)">
            <summary>
            Gets the Subcription Plans
            </summary>
            <param name="subscriptionPlansParameters">The subcription Plans Parameters.</param>
            <returns></returns>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.Vendor.SubscriptionsController.GetSubcriptionPlan(System.Int32)">
            <summary>
            Get the Subcription Plan.
            </summary>
            <param name="subscriptionPlanId">The SubcriptionPlan identifier.</param>
            <returns></returns>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.Vendor.SubscriptionsController.CreateSubcriptionPlan(Happy.Weddings.Gateway.Core.DTO.Vendor.SubscriptionPlan.CreateSubscriptionPlanRequest)">
            <summary>
            Create the Subcription Plan.
            </summary>
            <param name="request">The request.</param>
            <returns></returns>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.Vendor.SubscriptionsController.UpdateSubcriptionPlan(System.Int32,Happy.Weddings.Gateway.Core.DTO.Vendor.SubscriptionPlan.UpdateSubscriptionPlanRequest)">
            <summary>
            Update the Subcription Plan.
            </summary>
            <param name="subscriptionplanId">The subcriptionplan identifier.</param>
            <param name="request">The request.</param>
            <returns></returns>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.Vendor.SubscriptionsController.DeleteSubcriptionPlan(System.Int32)">
            <summary>
            Delete the Subcription Plan.
            </summary>
            <param name="subscriptionplanId">The subcriptionplan identifier.</param>
            <returns></returns>
        </member>
        <member name="T:Happy.Weddings.Gateway.API.Controllers.v1.Vendor.SuggestionlistsController">
            <summary>
            Suggestionlists operations handled by this controller
            </summary>
        </member>
        <member name="F:Happy.Weddings.Gateway.API.Controllers.v1.Vendor.SuggestionlistsController.suggestionlistService">
            <summary>
            The suggestionlist service
            </summary>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.Vendor.SuggestionlistsController.#ctor(Happy.Weddings.Gateway.Core.Services.v1.Vendor.ISuggestionListService)">
            <summary>
            Initializes a new instance of the <see cref="T:Happy.Weddings.Gateway.API.Controllers.v1.Vendor.SuggestionlistsController"/> class.
            </summary>
            <param name="suggestionlistService">The suggestionlist service.</param>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.Vendor.SuggestionlistsController.GetSuggestionLists(Happy.Weddings.Gateway.Core.DTO.Vendor.SuggestionList.SuggestionListParameter)">
            <summary>
            Gets the Suggestionlists
            </summary>
            <param name="suggestionListsParameters">The Suggestionlists Parameters.</param>
            <returns></returns>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.Vendor.SuggestionlistsController.GetSuggestionList(System.Int32)">
            <summary>
            Get the Suggestion list
            </summary>
            <param name="suggestionlistId">The Suggestionlists identifier.</param>
            <returns></returns>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.Vendor.SuggestionlistsController.CreateSuggestionList(Happy.Weddings.Gateway.Core.DTO.Vendor.SuggestionList.CreateSuggestionListRequest)">
            <summary>
            Create the Suggestionlist
            </summary>
            <param name="request">The request.</param>
            <returns></returns>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.Vendor.SuggestionlistsController.UpdateSuggestionList(System.Int32,Happy.Weddings.Gateway.Core.DTO.Vendor.SuggestionList.UpdateSuggestionListRequest)">
            <summary>
            Update the Suggestion list
            </summary>
            <param name="suggestionlistId">The Suggestionlist identifier.</param>
            <param name="request">The request.</param>
            <returns></returns>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.Vendor.SuggestionlistsController.DeleteSuggestionList(System.Int32)">
            <summary>
            Delete the Suggestion list
            </summary>
            <param name="suggestionlistId">The Suggestionlist identifier.</param>
            <returns></returns>
        </member>
        <member name="T:Happy.Weddings.Gateway.API.Controllers.v1.Vendor.TopUpController">
            <summary>
            TopUp operations handled by this controller
            </summary>
        </member>
        <member name="F:Happy.Weddings.Gateway.API.Controllers.v1.Vendor.TopUpController.topUpService">
            <summary>
            The top up service
            </summary>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.Vendor.TopUpController.#ctor(Happy.Weddings.Gateway.Core.Services.v1.Vendor.ITopupService)">
            <summary>
            Initializes a new instance of the <see cref="T:Happy.Weddings.Gateway.API.Controllers.v1.Vendor.TopUpController"/> class.
            </summary>
            <param name="topUpService">The top up service.</param>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.Vendor.TopUpController.GetTopUps(Happy.Weddings.Gateway.Core.DTO.Vendor.Topup.TopUpParameter)">
            <summary>
            Gets the Top Up 
            </summary>
            <param name="topupsParameters">The Vendor subcription  Parameters.</param>
            <returns></returns>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.Vendor.TopUpController.GetTopUpById(System.Int32)">
            <summary>
            Gets the top up by identifier.
            </summary>
            <param name="topupId">The topup identifier.</param>
            <returns></returns>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.Vendor.TopUpController.CreateTopUp(Happy.Weddings.Gateway.Core.DTO.Vendor.Topup.CreateTopUpRequest)">
            <summary>
            Create the Top Up
            </summary>
            <param name="request">The request.</param>
            <returns></returns>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.Vendor.TopUpController.UpdateTopUp(System.Int32,Happy.Weddings.Gateway.Core.DTO.Vendor.Topup.UpdateTopUpRequest)">
            <summary>
            Update the Top Up
            </summary>
            <param name="topupId">The topup identifier.</param>
            <param name="request">The request.</param>
            <returns></returns>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.Vendor.TopUpController.DeleteTopUp(System.Int32)">
            <summary>
            Delete the Top up
            </summary>
            <param name="topupId">The topup identifier.</param>
            <returns></returns>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.Vendor.TopUpController.GetTopUpBenefits(Happy.Weddings.Gateway.Core.DTO.Vendor.TopupBenefit.TopUpBenefitParameter)">
            <summary>
            Gets the Top Up Benefit
            </summary>
            <param name="topupBenefitsParameters">The Vendor subcription  Parameters.</param>
            <returns></returns>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.Vendor.TopUpController.GetTopupBenefitById(System.Int32)">
            <summary>
            Gets the top up Benefit by identifier.
            </summary>
            <param name="topupbenefitId">The topup identifier.</param>
            <returns></returns>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.Vendor.TopUpController.CreateTopUpBenefit(Happy.Weddings.Gateway.Core.DTO.Vendor.TopupBenefit.CreateTopUpBenefitRequest)">
            <summary>
            Create the Top Up Benefit
            </summary>
            <param name="request">The request.</param>
            <returns></returns>
            
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.Vendor.TopUpController.UpdateTopUpBenefit(System.Int32,Happy.Weddings.Gateway.Core.DTO.Vendor.TopupBenefit.UpdateTopUpBenefitRequest)">
            <summary>
            Update the Top Up Benefit
            </summary>
            <param name="topupId">The topup Benefit identifier.</param>
            <param name="request">The request.</param>
            <returns></returns>
        </member>
        <member name="T:Happy.Weddings.Gateway.API.Controllers.v1.MultiCodesController">
            <summary>
            Vendors multicode operations handled by this controller
            </summary>
        </member>
        <member name="F:Happy.Weddings.Gateway.API.Controllers.v1.MultiCodesController.multiCodeService">
            <summary>
            The kyc detail service
            </summary>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.MultiCodesController.#ctor(Happy.Weddings.Gateway.Core.Services.v1.Vendor.IMultiCodeService)">
            <summary>
            Initializes a new instance of the <see cref="T:Happy.Weddings.Gateway.API.Controllers.v1.MultiCodesController"/> class.
            </summary>
            <param name="multiCodeService">The kyc detail service.</param>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.MultiCodesController.GetMultiCodes(Happy.Weddings.Gateway.Core.DTO.Vendor.MultiCode.MultiCodeParameters)">
            <summary>
            Gets the MultiCodes.
            </summary>
            <param name="multiCodeParameters">The multicode parameters.</param>
            <returns></returns>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.MultiCodesController.GetMultiCodeById(System.String)">
            <summary>
            Gets the Multicode.
            </summary>
            <param name="code">System Code.</param>
            <returns></returns>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.MultiCodesController.CreateMultiCode(Happy.Weddings.Gateway.Core.DTO.Vendor.MultiCode.CreateMultiCodeVendorRequest)">
            <summary>
            Creates the Multicode.
            </summary>
            <param name="request">The request.</param>
            <returns></returns>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.MultiCodesController.UpdateMultiCode(System.String,Happy.Weddings.Gateway.Core.DTO.Vendor.MultiCode.UpdateMultiCodeVendorRequest)">
            <summary>
            Updates the Multicode.
            </summary>
            <param name="code">System Code.</param>
            <param name="request">The request.</param>
            <returns></returns>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.MultiCodesController.DeleteMultiCode(System.String)">
            <summary>
            Deletes the Multicode.
            </summary>
            <param name="code">System Code.</param>
            <returns></returns>
        </member>
        <member name="T:Happy.Weddings.Gateway.API.Controllers.v1.MultiDetailsController">
            <summary>
            Vendors multicode operations handled by this controller
            </summary>
        </member>
        <member name="F:Happy.Weddings.Gateway.API.Controllers.v1.MultiDetailsController.multiDetailService">
            <summary>
            The branch service
            </summary>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.MultiDetailsController.#ctor(Happy.Weddings.Gateway.Core.Services.v1.Vendor.IMultiDetailService)">
            <summary>
            Initializes a new instance of the <see cref="T:Happy.Weddings.Gateway.API.Controllers.v1.MultiDetailsController"/> class.
            </summary>
            <param name="multiDetailService">The branch service.</param>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.MultiDetailsController.GetMultiDetails(Happy.Weddings.Gateway.Core.DTO.Vendor.MultiDetail.MultiDetailParameters)">
            <summary>
            Gets the multidetail.
            </summary>
            <param name="multiDetailParameters">The multidetail parameters.</param>
            <returns></returns>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.MultiDetailsController.GetMultiDetailsById(System.String)">
            <summary>
            Gets the multidetails
            </summary>
            <param name="code"></param>
            <returns></returns>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.MultiDetailsController.CreateMultiDetails(Happy.Weddings.Gateway.Core.DTO.Vendor.MultiDetail.CreateMultiDetailsRequest)">
            <summary>
            Creates the multidetail.
            </summary>
            <param name="request">The request.</param>
            <returns></returns>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.MultiDetailsController.UpdateMultiDetails(System.Int32,Happy.Weddings.Gateway.Core.DTO.Vendor.MultiDetail.UpdateMultiDetailsRequest)">
            <summary>
            Updates MultiDetail.
            </summary>
            <param name="multidetailId">The multidetail identifier.</param>
            <param name="request">The request.</param>
            <returns></returns>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.MultiDetailsController.DeleteMultiDetails(System.Int32)">
            <summary>
            Deletes the MultiDetail.
            </summary>
            <param name="multidetailId">The Multidetail identifier.</param>
            <returns></returns>
        </member>
        <member name="T:Happy.Weddings.Gateway.API.Controllers.v1.UtilityController">
            <summary>
            Vendors multicode operations handled by this controller
            </summary>
        </member>
        <member name="F:Happy.Weddings.Gateway.API.Controllers.v1.UtilityController.utilityService">
            <summary>
            The branch service
            </summary>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.UtilityController.#ctor(Happy.Weddings.Gateway.Core.Services.v1.Vendor.IUtilityService)">
            <summary>
            Initializes a new instance of the <see cref="T:Happy.Weddings.Gateway.API.Controllers.v1.UtilityController"/> class.
            </summary>
            <param name="utilityService">The utility service.</param>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.UtilityController.GetUtilitys(Happy.Weddings.Gateway.Core.DTO.Vendor.Utility.UtilityParameter)">
            <summary>
            Gets the utilitys.
            </summary>
            <param name="utilityParameter">The utility parameter.</param>
            <returns></returns>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.UtilityController.GetUtilityById(System.Int32)">
            <summary>
            Gets the utility by identifier.
            </summary>
            <param name="utilityId">The utility identifier.</param>
            <returns></returns>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.UtilityController.CreateUtility(Happy.Weddings.Gateway.Core.DTO.Vendor.Utility.CreateUtilityRequest)">
            <summary>
            Creates the utility.
            </summary>
            <param name="request">The request.</param>
            <returns></returns>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.UtilityController.UpdateUtility(System.Int32,Happy.Weddings.Gateway.Core.DTO.Vendor.Utility.UpdateUtilityRequest)">
            <summary>
            Updates the utility.
            </summary>
            <param name="utilityId">The utility identifier.</param>
            <param name="request">The request.</param>
            <returns></returns>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.UtilityController.DeleteUtility(System.Int32)">
            <summary>
            Deletes the utility.
            </summary>
            <param name="utilityId">The utility identifier.</param>
            <returns></returns>
        </member>
        <member name="T:Happy.Weddings.Gateway.API.Controllers.v1.Wallet.MulticodeController">
            <summary>
            Wallet operations handled by this controller
            </summary>
        </member>
        <member name="F:Happy.Weddings.Gateway.API.Controllers.v1.Wallet.MulticodeController.multicodeService">
            <summary>
            The Multicode service
            </summary>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.Wallet.MulticodeController.#ctor(Happy.Weddings.Gateway.Core.Services.v1.Wallet.IMulticodeService)">
            <summary>
            Initializes a new instance of the <see cref="T:Happy.Weddings.Gateway.API.Controllers.v1.Wallet.MulticodeController"/> class.
            </summary>
            <param name="multicodeService">The Multicode service.</param>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.Wallet.MulticodeController.GetAllMultiCodes">
            <summary>
            Gets the Multicode.
            </summary>
            <param name="multicodeParameter">The Multicode parameters request.</param>
            <returns></returns>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.Wallet.MulticodeController.GetMultiCode(System.String)">
            <summary>
            Gets the Multicode.
            </summary>
            <param name="code">System Code.</param>
            <returns></returns>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.Wallet.MulticodeController.CreateMultiCode(Happy.Weddings.Gateway.Core.DTO.Wallet.Multicode.CreateMulticodeWalletRequest)">
            <summary>
            Creates the Multicode.
            </summary>
            <param name="request">The request.</param>
            <returns></returns>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.Wallet.MulticodeController.UpdateMultiCode(System.String,Happy.Weddings.Gateway.Core.DTO.Wallet.Multicode.UpdateMulticodeWalletRequest)">
            <summary>
            Updates the Multicode.
            </summary>
            <param name="code">System Code.</param>
            <param name="request">The request.</param>
            <returns></returns>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.Wallet.MulticodeController.DeleteMultiCode(System.String)">
            <summary>
            Deletes the Multicode.
            </summary>
            <param name="code">System Code.</param>
            <returns></returns>
        </member>
        <member name="T:Happy.Weddings.Gateway.API.Controllers.v1.Wallet.MultidetailController">
            <summary>
            Wallet operations handled by this controller
            </summary>
        </member>
        <member name="F:Happy.Weddings.Gateway.API.Controllers.v1.Wallet.MultidetailController.multidetailService">
            <summary>
            The Multidetail service
            </summary>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.Wallet.MultidetailController.#ctor(Happy.Weddings.Gateway.Core.Services.v1.Wallet.IMultidetailService)">
            <summary>
            Initializes a new instance of the <see cref="T:Happy.Weddings.Gateway.API.Controllers.v1.Wallet.MultidetailController"/> class.
            </summary>
            <param name="multidetailService">The Multidetail service.</param>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.Wallet.MultidetailController.GetAllMultiDetails(Happy.Weddings.Gateway.Core.DTO.Wallet.Multidetail.MultidetailParameter)">
            <summary>
            Gets the Multidetail.
            </summary>
            <param name="multidetailParameter">The Multidetail parameters request.</param>
            <returns></returns>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.Wallet.MultidetailController.GetMultiDetailsByCode(System.String)">
            <summary>
            Gets the Multidetail.
            </summary>
            <param name="code">System Code.</param>
            <returns></returns>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.Wallet.MultidetailController.CreateMultiDetails(Happy.Weddings.Gateway.Core.DTO.Wallet.Multidetail.CreateMultidetailWalletRequest)">
            <summary>
            Creates the Multidetail.
            </summary>
            <param name="request">The request.</param>
            <returns></returns>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.Wallet.MultidetailController.UpdateMultiDetails(System.Int32,Happy.Weddings.Gateway.Core.DTO.Wallet.Multidetail.UpdateMultidetailWalletRequest)">
            <summary>
            Updates the Multidetail.
            </summary>
            <param name="multidetailId">The Multidetail identifier.</param>
            <param name="request">The request.</param>
            <returns></returns>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.Wallet.MultidetailController.DeleteMultiDetails(System.Int32)">
            <summary>
            Deletes the Multidetail.
            </summary>
            <param name="multidetailId">The Multidetail identifier.</param>
            <returns></returns>
        </member>
        <member name="T:Happy.Weddings.Gateway.API.Controllers.v1.Wallet.PaymentBookController">
            <summary>
            Wallet operations handled by this controller
            </summary>
        </member>
        <member name="F:Happy.Weddings.Gateway.API.Controllers.v1.Wallet.PaymentBookController.paymentBookService">
            <summary>
            The PaymentBook service
            </summary>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.Wallet.PaymentBookController.#ctor(Happy.Weddings.Gateway.Core.Services.v1.Wallet.IPaymentBookService)">
            <summary>
            Initializes a new instance of the <see cref="T:Happy.Weddings.Gateway.API.Controllers.v1.Wallet.PaymentBookController"/> class.
            </summary>
            <param name="paymentBookService">The PaymentBook service.</param>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.Wallet.PaymentBookController.GetAllPaymentBook(Happy.Weddings.Gateway.Core.DTO.Wallet.PaymentBook.PaymentBookParameter)">
            <summary>
            Gets the PaymentBook.
            </summary>
            <param name="paymentBookParameter">The PaymentBook parameters request.</param>
            <returns></returns>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.Wallet.PaymentBookController.GetPaymentBookDetails(System.Int32)">
            <summary>
            Gets the PaymentBook.
            </summary>
            <param name="paymentBookId">The PaymentBook identifier.</param>
            <returns></returns>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.Wallet.PaymentBookController.CreatePaymentBook(Happy.Weddings.Gateway.Core.DTO.Wallet.PaymentBook.PaymentBookRequest)">
            <summary>
            Creates the PaymentBook.
            </summary>
            <param name="request">The request.</param>
            <returns></returns>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.Wallet.PaymentBookController.UpdatePaymentBook(System.Int32,Happy.Weddings.Gateway.Core.DTO.Wallet.PaymentBook.UpdatePaymentBookRequest)">
            <summary>
            Updates the PaymentBook.
            </summary>
            <param name="paymentBookId">The PaymentBook identifier.</param>
            <param name="request">The request.</param>
            <returns></returns>
        </member>
        <member name="T:Happy.Weddings.Gateway.API.Controllers.v1.Wallet.RefundController">
            <summary>
            Wallet operations handled by this controller
            </summary>
        </member>
        <member name="F:Happy.Weddings.Gateway.API.Controllers.v1.Wallet.RefundController.refundService">
            <summary>
            The Refund service
            </summary>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.Wallet.RefundController.#ctor(Happy.Weddings.Gateway.Core.Services.v1.Wallet.IRefundService)">
            <summary>
            Initializes a new instance of the <see cref="T:Happy.Weddings.Gateway.API.Controllers.v1.Wallet.RefundController"/> class.
            </summary>
            <param name="refundService">The Refund service.</param>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.Wallet.RefundController.GetAllRefund(Happy.Weddings.Gateway.Core.DTO.Wallet.Refund.RefundParameter)">
            <summary>
            Gets the Refund.
            </summary>
            <param name="refundParameter">The Refund parameters request.</param>
            <returns></returns>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.Wallet.RefundController.GetRefundDetails(System.Int32)">
            <summary>
            Gets the Refund.
            </summary>
            <param name="refundId">The Refund identifier.</param>
            <returns></returns>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.Wallet.RefundController.CreateRefund(Happy.Weddings.Gateway.Core.DTO.Wallet.Refund.CreateRefundRequest)">
            <summary>
            Creates the Refund.
            </summary>
            
            <param name="request">The request.</param>
            <returns></returns>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.Wallet.RefundController.UpdateRefund(System.Int32,System.Boolean,System.Boolean,Happy.Weddings.Gateway.Core.DTO.Wallet.Refund.UpdateRefundRequest)">
            <summary>
            Updates the Refund.
            </summary>
            <param name="refundId">The Refund identifier.</param>
            <param name="IsApproved">IsApproved status.</param>
            <param name="IsRejected">IsRejected status.</param>
            <param name="request">The request.</param>
            <returns></returns>
        </member>
        <member name="T:Happy.Weddings.Gateway.API.Controllers.v1.Wallet.TransactionsController">
            <summary>
            Transactions operations handled by this controller
            </summary>
        </member>
        <member name="F:Happy.Weddings.Gateway.API.Controllers.v1.Wallet.TransactionsController.transactionsService">
            <summary>
            The Transactions service
            </summary>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.Wallet.TransactionsController.#ctor(Happy.Weddings.Gateway.Core.Services.v1.Wallet.ITransactionsService)">
            <summary>
            Initializes a new instance of the <see cref="T:Happy.Weddings.Gateway.API.Controllers.v1.Wallet.TransactionsController"/> class.
            </summary>
            <param name="transactionsService">The Transactions service.</param>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.Wallet.TransactionsController.GetAllTransactions(Happy.Weddings.Gateway.Core.DTO.Wallet.Transactions.TransactionsParameter)">
            <summary>
            Gets the Transactions.
            </summary>
            <param name="transactionsParameter">The Transactions parameters request.</param>
            <returns></returns>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.Wallet.TransactionsController.GetTransactionsDetails(System.Int32)">
            <summary>
            Gets the Transactions.
            </summary>
            <param name="transactionsId">The Transactions identifier.</param>
            <returns></returns>
        </member>
        <member name="T:Happy.Weddings.Gateway.API.Controllers.v1.Wallet.WalletAdjustmentController">
            <summary>
            Wallet operations handled by this controller
            </summary>
        </member>
        <member name="F:Happy.Weddings.Gateway.API.Controllers.v1.Wallet.WalletAdjustmentController.walletAdjustmentService">
            <summary>
            The WalletAdjustment service
            </summary>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.Wallet.WalletAdjustmentController.#ctor(Happy.Weddings.Gateway.Core.Services.v1.Wallet.IWalletAdjustmentService)">
            <summary>
            Initializes a new instance of the <see cref="T:Happy.Weddings.Gateway.API.Controllers.v1.Wallet.WalletAdjustmentController"/> class.
            </summary>
            <param name="walletAdjustmentService">The WalletAdjustment service.</param>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.Wallet.WalletAdjustmentController.GetAllWalletAdjustment(Happy.Weddings.Gateway.Core.DTO.Wallet.WalletAdjustment.WalletAdjustmentParameter)">
            <summary>
            Gets the WalletAdjustment.
            </summary>
            <param name="walletAdjustmentParameter">The WalletAdjustment parameters request.</param>
            <returns></returns>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.Wallet.WalletAdjustmentController.GetWalletAdjustmentDetails(System.Int32)">
            <summary>
            Gets the WalletAdjustment.
            </summary>
            <param name="walletAdjustmentId">The WalletAdjustment identifier.</param>
            <returns></returns>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.Wallet.WalletAdjustmentController.CreateWalletAdjustment(Happy.Weddings.Gateway.Core.DTO.Wallet.WalletAdjustment.CreateWalletAdjustmentRequest)">
            <summary>
            Creates the WalletAdjustment.
            </summary>
            <param name="request">The request.</param>
            <returns></returns>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.Wallet.WalletAdjustmentController.UpdateWalletAdjustment(System.Int32,Happy.Weddings.Gateway.Core.DTO.Wallet.WalletAdjustment.UpdateWalletAdjustmentRequest)">
            <summary>
            Updates the WalletAdjustment.
            </summary>
            <param name="walletAdjustmentId">The WalletAdjustment identifier.</param>
            <param name="request">The request.</param>
            <returns></returns>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.Wallet.WalletAdjustmentController.DeleteWalletAdjustment(System.Int32)">
            <summary>
            Deletes the WalletAdjustment.
            </summary>
            <param name="walletAdjustmentId">The WalletAdjustment identifier.</param>
            <returns></returns>
        </member>
        <member name="T:Happy.Weddings.Gateway.API.Controllers.v1.Wallet.WalletController">
            <summary>
            Wallet operations handled by this controller
            </summary>
        </member>
        <member name="F:Happy.Weddings.Gateway.API.Controllers.v1.Wallet.WalletController.walletService">
            <summary>
            The Wallet service
            </summary>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.Wallet.WalletController.#ctor(Happy.Weddings.Gateway.Core.Services.v1.Wallet.IWalletService)">
            <summary>
            Initializes a new instance of the <see cref="T:Happy.Weddings.Gateway.API.Controllers.v1.Wallet.WalletController"/> class.
            </summary>
            <param name="walletService">The Wallet service.</param>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.Wallet.WalletController.GetAllWallets(Happy.Weddings.Gateway.Core.DTO.Wallet.Wallet.WalletParameter)">
            <summary>
            Gets the Wallet.
            </summary>
            <param name="walletParameter">The Wallet parameters request.</param>
            <returns></returns>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.Wallet.WalletController.GetWalletDetails(System.Int32)">
            <summary>
            Gets the Wallet.
            </summary>
            <param name="walletId">The Wallet identifier.</param>
            <returns></returns>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.Wallet.WalletController.CreateWallet(Happy.Weddings.Gateway.Core.DTO.Wallet.Wallet.CreateWalletRequest)">
            <summary>
            Creates the Wallet.
            </summary>
            <param name="request">The request.</param>
            <returns></returns>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.Wallet.WalletController.UpdateWallet(System.Int32,System.Boolean,System.Boolean,System.Boolean,Happy.Weddings.Gateway.Core.DTO.Wallet.Wallet.UpdateWalletRequest)">
            <summary>
            Updates the Wallet.
            </summary>
            <param name="walletId">The Wallet identifier.</param>
            <param name="IsPaused">IsPaused Status.</param>
            <param name="IsReleased">IsReleased Status.</param>
            <param name="IsChurned">IsChurned Status.</param>
            <param name="request">The request.</param>
            <returns></returns>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.Wallet.WalletController.DeleteWallet(System.Int32)">
            <summary>
            Deletes the Wallet.
            </summary>
            <param name="walletId">The Wallet identifier.</param>
            <returns></returns>
        </member>
        <member name="F:Happy.Weddings.Gateway.API.Controllers.v1.Wallet.WalletDeductionController.walletDeductionService">
            <summary>
            The WalletDeduction service
            </summary>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.Wallet.WalletDeductionController.#ctor(Happy.Weddings.Gateway.Core.Services.v1.Wallet.IWalletDeductionService)">
            <summary>
            Initializes a new instance of the <see cref="T:Happy.Weddings.Gateway.API.Controllers.v1.Wallet.WalletDeductionController"/> class.
            </summary>
            <param name="walletDeductionService">The WalletDeduction service.</param>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.Wallet.WalletDeductionController.GetAllWalletDeduction(Happy.Weddings.Gateway.Core.DTO.Wallet.WalletDeduction.WalletDeductionParameter)">
            <summary>
            Gets the WalletDeduction.
            </summary>
            <param name="walletDeductionParameter">The WalletDeduction parameters request.</param>
            <returns></returns>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.Wallet.WalletDeductionController.GetWalletDeductionDetails(System.Int32)">
            <summary>
            Gets the WalletDeduction.
            </summary>
            <param name="walletDeductionId">The WalletDeduction identifier.</param>
            <returns></returns>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.Wallet.WalletDeductionController.CreateWalletDeduction(Happy.Weddings.Gateway.Core.DTO.Wallet.WalletDeduction.CreateWalletDeductionRequest)">
            <summary>
            Creates the WalletDeduction.
            </summary>
            <param name="request">The request.</param>
            <returns></returns>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.Wallet.WalletDeductionController.UpdateWalletDeduction(System.Int32,Happy.Weddings.Gateway.Core.DTO.Wallet.WalletDeduction.UpdateWalletDeductionRequest)">
            <summary>
            Updates the WalletDeduction.
            </summary>
            <param name="walletDeductionId">The WalletDeduction identifier.</param>
            <param name="request">The request.</param>
            <returns></returns>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.Wallet.WalletDeductionController.DeleteWalletDeduction(System.Int32)">
            <summary>
            Deletes the WalletDeduction.
            </summary>
            <param name="walletDeductionId">The WalletDeduction identifier.</param>
            <returns></returns>
        </member>
        <member name="T:Happy.Weddings.Gateway.API.Controllers.v1.Wallet.WalletRuleController">
            <summary>
            Wallet operations handled by this controller
            </summary>
        </member>
        <member name="F:Happy.Weddings.Gateway.API.Controllers.v1.Wallet.WalletRuleController.walletRuleService">
            <summary>
            The WalletRule service
            </summary>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.Wallet.WalletRuleController.#ctor(Happy.Weddings.Gateway.Core.Services.v1.Wallet.IWalletRuleService)">
            <summary>
            Initializes a new instance of the <see cref="T:Happy.Weddings.Gateway.API.Controllers.v1.Wallet.WalletRuleController"/> class.
            </summary>
            <param name="walletRuleService">The WalletRule service.</param>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.Wallet.WalletRuleController.GetAllWallets(Happy.Weddings.Gateway.Core.DTO.Wallet.WalletRule.WalletRuleParameter)">
            <summary>
            Gets the WalletRules.
            </summary>
            <param name="walletRuleParameter">The WalletRule parameters request.</param>
            <returns></returns>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.Wallet.WalletRuleController.GetWalletDetails(System.Int32)">
            <summary>
            Gets the WalletRuleBy Id.
            </summary>
            <param name="walletRuleId">The WalletRule identifier.</param>
            <returns></returns>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.Wallet.WalletRuleController.CreateWallet(Happy.Weddings.Gateway.Core.DTO.Wallet.WalletRule.CreateWalletRuleRequest)">
            <summary>
            Creates the WalletRule.
            </summary>
            <param name="request">The request.</param>
            <returns></returns>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.Wallet.WalletRuleController.UpdateWallet(System.Int32,Happy.Weddings.Gateway.Core.DTO.Wallet.WalletRule.UpdateWalletRuleRequest)">
            <summary>
            Updates the WalletRule.
            </summary>
            <param name="walletRuleId">The WalletRule identifier.</param>
            <param name="request">The request.</param>
            <returns></returns>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.Wallet.WalletRuleController.DeleteWallet(System.Int32)">
            <summary>
            Deletes the WalletRule.
            </summary>
            <param name="walletRuleId">The WalletRule identifier.</param>
            <returns></returns>
        </member>
        <member name="T:Happy.Weddings.Gateway.API.Controllers.v1.Wallet.WalletStatusController">
            <summary>
            Wallet operations handled by this controller
            </summary>
        </member>
        <member name="F:Happy.Weddings.Gateway.API.Controllers.v1.Wallet.WalletStatusController.walletStatusService">
            <summary>
            The WalletStatus service
            </summary>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.Wallet.WalletStatusController.#ctor(Happy.Weddings.Gateway.Core.Services.v1.Wallet.IWalletStatusService)">
            <summary>
            Initializes a new instance of the <see cref="T:Happy.Weddings.Gateway.API.Controllers.v1.Wallet.WalletStatusController"/> class.
            </summary>
            <param name="walletStatusService">The WalletStatus service.</param>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.Wallet.WalletStatusController.GetAllWalletStatus(Happy.Weddings.Gateway.Core.DTO.Wallet.WalletStatus.WalletStatusParameter)">
            <summary>
            Gets the WalletStatus.
            </summary>
            <param name="walletStatusParameter">The WalletStatus parameters request.</param>
            <returns></returns>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.Wallet.WalletStatusController.GetWalletDetails(System.Int32)">
            <summary>
            Gets the WalletStatus.
            </summary>
            <param name="walletStatusId">The WalletStatus identifier.</param>
            <returns></returns>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.Wallet.WalletStatusController.CreateWalletStatus(System.Boolean,System.Boolean,System.Boolean,Happy.Weddings.Gateway.Core.DTO.Wallet.WalletStatus.CreateWalletStatusRequest)">
            <summary>
            Creates the WalletStatus.
            </summary>
            <param name="IsPaused">IsPaused Status.</param>
            <param name="IsReleased">IsReleased Status.</param>
            <param name="IsChurned">IsChurned Status.</param>
            <param name="request">The request.</param>
            <returns></returns>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.Wallet.WalletStatusController.UpdateWalletStatus(System.Int32,Happy.Weddings.Gateway.Core.DTO.Wallet.WalletStatus.UpdateWalletStatusRequest)">
            <summary>
            Updates the WalletStatus.
            </summary>
            <param name="walletStatusId">The WalletStatus identifier.</param>
            <param name="request">The request.</param>
            <returns></returns>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Controllers.v1.Wallet.WalletStatusController.DeleteWalletStatus(System.Int32)">
            <summary>
            Deletes the WalletStatus.
            </summary>
            <param name="walletStatusId">The WalletStatus identifier.</param>
            <returns></returns>
        </member>
        <member name="T:Happy.Weddings.Gateway.API.Extensions.CircuitBreaker">
            <summary>
            Extension for adding circuit breakers
            </summary>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Extensions.CircuitBreaker.AddCircuitBreakers(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            Adds the circuit breakers.
            </summary>
            <param name="services">The services.</param>
            <param name="configuration">The configuration.</param>
            <returns></returns>
        </member>
        <member name="T:Happy.Weddings.Gateway.API.Extensions.FluentValidation">
            <summary>
            Extension for adding fluent validators
            </summary>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Extensions.FluentValidation.AddFluentAbstractValidators(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            Adds the fluent validators.
            </summary>
            <param name="services">The services.</param>
            <returns></returns>
        </member>
        <member name="T:Happy.Weddings.Gateway.API.Extensions.HealthCheck">
            <summary>
            Extension for adding health checks
            </summary>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Extensions.HealthCheck.AddHealthChecks(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            Adds the health checks.
            </summary>
            <param name="services">The services.</param>
            <param name="configuration">The configuration.</param>
            <returns></returns>
        </member>
        <member name="T:Happy.Weddings.Gateway.API.Extensions.JWTAuthentication">
            <summary>
            Extension for adding JWT authentication
            </summary>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Extensions.JWTAuthentication.AddJWTAuthentication(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.AspNetCore.Hosting.IWebHostEnvironment,Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            Creates the response compression.
            </summary>
            <param name="services">The services.</param>
            <param name="HostingEnvironment">The hosting environment.</param>
            <param name="configuration">The configuration.</param>
            <returns></returns>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Extensions.JWTAuthentication.GetKey(System.String,System.String)">
            <summary>
            Gets the key.
            </summary>
            <param name="keyFilePath">The key file path.</param>
            <param name="certificatePath">The certificate path.</param>
            <returns></returns>
        </member>
        <member name="T:Happy.Weddings.Gateway.API.Extensions.MVCConfiguration">
            <summary>
            Extension for adding MVC related operations
            </summary>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Extensions.MVCConfiguration.AddMVCConfiguration(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            Adds the MVC confihuration.
            </summary>
            <param name="services">The services.</param>
            <returns></returns>
        </member>
        <member name="T:Happy.Weddings.Gateway.API.Extensions.ProxyHeaders">
            <summary>
            Extension for adding reverse proxy
            </summary>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Extensions.ProxyHeaders.ForwardHeaders(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            Forwards the headers.
            </summary>
            <param name="services">The services.</param>
            <returns></returns>
        </member>
        <member name="T:Happy.Weddings.Gateway.API.Extensions.RedisDistributedCache">
            <summary>
            Extension for adding redis distributed cache exchange
            </summary>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Extensions.RedisDistributedCache.AddRedisCacheExchange(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            Adds the redis cache exchange.
            </summary>
            <param name="services">The services.</param>
            <param name="configuration">The configuration.</param>
            <returns></returns>
        </member>
        <member name="T:Happy.Weddings.Gateway.API.Extensions.ResponseCompression">
            <summary>
            Extension for adding response compression
            </summary>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Extensions.ResponseCompression.CreateResponseCompression(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            Adds the response compression.
            </summary>
            <param name="services">The services.</param>
            <returns></returns>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Extensions.ResponseCompression.GetMimeTypesForCompression">
            <summary>
            Gets the MIME types for compression.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Happy.Weddings.Gateway.API.Extensions.ServicesInjection">
            <summary>
            Extension for adding object injection lifetime
            </summary>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Extensions.ServicesInjection.AddServicesInjection(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.AspNetCore.Hosting.IWebHostEnvironment,Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            Adds the services injection.
            </summary>
            <param name="services">The services.</param>
            <param name="HostingEnvironment">The hosting environment.</param>
            <param name="configuration">The configuration.</param>
            <returns></returns>
        </member>
        <member name="T:Happy.Weddings.Gateway.API.Extensions.SwaggerConfiguration">
            <summary>
            Extension for adding swagger documentation
            </summary>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Extensions.SwaggerConfiguration.AddSwaggerConfiguration(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            Creates the response compression.
            </summary>
            <param name="services">The services.</param>
            <param name="configuration">The configuration.</param>
            <returns></returns>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Extensions.SwaggerConfiguration.GetSwaggerSecurityScheme">
            <summary>
            Gets the swagger security scheme.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Happy.Weddings.Gateway.API.Filters.RequestRateLimitAttribute">
            <summary>
            Applying the rate limt for the requests
            </summary>
            <seealso cref="T:Microsoft.AspNetCore.Mvc.Filters.ActionFilterAttribute" />
        </member>
        <member name="P:Happy.Weddings.Gateway.API.Filters.RequestRateLimitAttribute.Name">
            <summary>
            Gets or sets the name.
            </summary>
        </member>
        <member name="P:Happy.Weddings.Gateway.API.Filters.RequestRateLimitAttribute.Seconds">
            <summary>
            Gets or sets the seconds.
            </summary>
        </member>
        <member name="P:Happy.Weddings.Gateway.API.Filters.RequestRateLimitAttribute.Cache">
            <summary>
            Gets the cache.
            </summary>
            <value>
            The cache.
            </value>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Filters.RequestRateLimitAttribute.OnActionExecuting(Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext)">
            <summary>
            </summary>
            <param name="context"></param>
            <inheritdoc />
        </member>
        <member name="T:Happy.Weddings.Gateway.API.Filters.SerilogPropertyFilter">
            <summary>
            Serilog filter for adding dynamic properties
            </summary>
        </member>
        <member name="F:Happy.Weddings.Gateway.API.Filters.SerilogPropertyFilter._next">
            <summary>
            The next
            </summary>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Filters.SerilogPropertyFilter.#ctor(Microsoft.AspNetCore.Http.RequestDelegate)">
            <summary>
            Initializes a new instance of the <see cref="T:Happy.Weddings.Gateway.API.Filters.SerilogPropertyFilter" /> class.
            </summary>
            <param name="next">The next.</param>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Filters.SerilogPropertyFilter.Invoke(Microsoft.AspNetCore.Http.HttpContext)">
            <summary>
            Invokes the specified context.
            </summary>
            <param name="context">The context.</param>
        </member>
        <member name="T:Happy.Weddings.Gateway.API.Program">
            <summary>
            Program starts here
            </summary>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Program.Main(System.String[])">
            <summary>
            Defines the entry point of the application.
            </summary>
            <param name="args">The arguments.</param>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Program.CreateHostBuilder(System.String[])">
            <summary>
            Creates the host builder.
            </summary>
            <param name="args">The arguments.</param>
            <returns></returns>
        </member>
        <member name="T:Happy.Weddings.Gateway.API.Startup">
            <summary>
            Base method for intilaizing the services
            </summary>
        </member>
        <member name="P:Happy.Weddings.Gateway.API.Startup.Configuration">
            <summary>
            Gets the configuration.
            </summary>
            <value>
            The configuration.
            </value>
        </member>
        <member name="P:Happy.Weddings.Gateway.API.Startup.HostingEnvironment">
            <summary>
            Gets the hosting environment.
            </summary>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Startup.#ctor(Microsoft.Extensions.Configuration.IConfiguration,Microsoft.AspNetCore.Hosting.IWebHostEnvironment)">
            <summary>
            Initializes a new instance of the <see cref="T:Happy.Weddings.Gateway.API.Startup"/> class.
            </summary>
            <param name="configuration">The configuration.</param>
            <param name="hostingEnvironment">The hosting environment.</param>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Startup.ConfigureServices(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            Configures the services.
            </summary>
            <param name="services">The services.</param>
        </member>
        <member name="M:Happy.Weddings.Gateway.API.Startup.Configure(Microsoft.AspNetCore.Builder.IApplicationBuilder,Microsoft.AspNetCore.Hosting.IWebHostEnvironment)">
            <summary>
            Configures the specified application.
            </summary>
            <param name="app">The application.</param>
            <param name="env">The env.</param>
        </member>
        <member name="T:Happy.Weddings.Vendor.API.Controllers.v1.BranchServicesController">
            <summary>
            Vendor branch and services offered  operations handled by this controller
            </summary>
            <seealso cref="T:Microsoft.AspNetCore.Mvc.ControllerBase" />
        </member>
        <member name="F:Happy.Weddings.Vendor.API.Controllers.v1.BranchServicesController.branchService">
            <summary>
            The branch service
            </summary>
        </member>
        <member name="M:Happy.Weddings.Vendor.API.Controllers.v1.BranchServicesController.#ctor(Happy.Weddings.Gateway.Core.Services.v1.Vendor.IBranchService)">
            <summary>
            Initializes a new instance of the <see cref="T:Happy.Weddings.Vendor.API.Controllers.v1.BranchServicesController"/> class.
            </summary>
            <param name="branchService">The branch service.</param>
        </member>
        <member name="M:Happy.Weddings.Vendor.API.Controllers.v1.BranchServicesController.GetAllBranches(Happy.Weddings.Gateway.Core.DTO.Vendor.Branches.BranchParameters)">
            <summary>
            Gets the type of the branches.
            </summary>
            <param name="branchParameters">The branch type identifier.</param>
            <returns></returns>
        </member>
        <member name="M:Happy.Weddings.Vendor.API.Controllers.v1.BranchServicesController.CreateBranch(Happy.Weddings.Gateway.Core.DTO.Vendor.Branch.CreateBranchRequest)">
            <summary>
            Creates the Branch.
            </summary>
            <param name="request">The request.</param>
            <returns></returns>
        </member>
        <member name="M:Happy.Weddings.Vendor.API.Controllers.v1.BranchServicesController.UpdateBranch(System.Int32,Happy.Weddings.Gateway.Core.DTO.Vendor.Branch.UpdateBranchRequest)">
            <summary>
            Updates the branch.
            </summary>
            <param name="branchId">The branch identifier.</param>
            <param name="request">The request.</param>
            <returns></returns>
        </member>
        <member name="M:Happy.Weddings.Vendor.API.Controllers.v1.BranchServicesController.DeleteBranch(System.Int32)">
            <summary>
            Deletes the branch.
            </summary>
            <param name="branchId">The district  identifier.</param>
            <returns></returns>
        </member>
        <member name="T:Happy.Weddings.Vendor.API.Controllers.v1.ProfileController">
            <summary>
            Vendors Profile operations handled by this controller
            </summary>
        </member>
        <member name="F:Happy.Weddings.Vendor.API.Controllers.v1.ProfileController.profileService">
            <summary>
            The branch service
            </summary>
        </member>
        <member name="M:Happy.Weddings.Vendor.API.Controllers.v1.ProfileController.#ctor(Happy.Weddings.Gateway.Core.Services.v1.Vendor.IProfileService)">
            <summary>
            Initializes a new instance of the <see cref="T:Happy.Weddings.Vendor.API.Controllers.v1.ProfileController"/> class.
            </summary>
            <param name="profileService">The branch service.</param>
        </member>
        <member name="M:Happy.Weddings.Vendor.API.Controllers.v1.ProfileController.GetCategoryDetailsByVendorId(System.String)">
            <summary>
            Gets the Category details by Vendor Id.
            </summary>
            <param name="vendorId">The vendor id.</param>
            <returns></returns>
        </member>
        <member name="M:Happy.Weddings.Vendor.API.Controllers.v1.ProfileController.CreateCategoryDetails(Happy.Weddings.Gateway.Core.DTO.Vendor.ProfilePicture.CreateCategoryDetailsRequest)">
            <summary>
            Creates the Category Details.
            </summary>
            <param name="request">The request.</param>
            <returns></returns>
        </member>
        <member name="M:Happy.Weddings.Vendor.API.Controllers.v1.ProfileController.UpdateCategoryDetails(System.Int32,Happy.Weddings.Gateway.Core.DTO.Vendor.ProfilePicture.UpdateCategoryDetailsRequest)">
            <summary>
            Updates Profile Picture.
            </summary>
            <param name="categoryId">The profilePicture identifier.</param>
            <param name="request">The request.</param>
            <returns></returns>
        </member>
    </members>
</doc>
